70 actionable tasks: 45 executed, 25 up-to-date
gradle build done
running JMH with args: -prof async:libPath=/home/boris/bin/async-profiler-2.10-linux-x64/lib/libasyncProfiler.so;output=flamegraph AuthorizerBenchmark
# JMH version: 1.37
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+6-LTS
# VM invoker: /home/boris/.sdkman/candidates/java/17.0.3.6.1-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAclsIterator
# Parameters: (aclCount = 500, authorizerType = ACL, denyPercentage = 50, resourceCount = 5000)

# Run progress: 0.00% complete, ETA 00:03:20
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 306.307 ms/op
# Warmup Iteration   2: 400.721 ms/op
# Warmup Iteration   3: 275.441 ms/op
Iteration   1: 282.010 ms/op
Iteration   2: 507.222 ms/op
                 async: (text only)

# Processing profiler results: AsyncProfiler


Result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAclsIterator":
  394.616 ms/op

Secondary result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAclsIterator:async":
Async profiler results:
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAclsIterator-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-forward.html
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAclsIterator-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-reverse.html


# JMH version: 1.37
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+6-LTS
# VM invoker: /home/boris/.sdkman/candidates/java/17.0.3.6.1-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizeByResourceType
# Parameters: (aclCount = 500, authorizerType = ACL, denyPercentage = 50, resourceCount = 5000)

# Run progress: 25.00% complete, ETA 00:10:28
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 3.916 ms/op
# Warmup Iteration   2: 4.028 ms/op
# Warmup Iteration   3: 3.780 ms/op
Iteration   1: 3.640 ms/op
Iteration   2: 3.912 ms/op
                 async: (text only)

# Processing profiler results: AsyncProfiler


Result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizeByResourceType":
  3.776 ms/op

Secondary result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizeByResourceType:async":
Async profiler results:
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizeByResourceType-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-forward.html
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizeByResourceType-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-reverse.html


# JMH version: 1.37
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+6-LTS
# VM invoker: /home/boris/.sdkman/candidates/java/17.0.3.6.1-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer
# Parameters: (aclCount = 500, authorizerType = ACL, denyPercentage = 50, resourceCount = 5000)

# Run progress: 50.00% complete, ETA 00:07:06
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 0.223 ms/op
# Warmup Iteration   2: 0.162 ms/op
# Warmup Iteration   3: 0.154 ms/op
Iteration   1: 0.164 ms/op
Iteration   2: 0.165 ms/op
                 async: (text only)

# Processing profiler results: AsyncProfiler


Result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer":
  0.164 ms/op

Secondary result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer:async":
Async profiler results:
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-forward.html
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-reverse.html


# JMH version: 1.37
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+6-LTS
# VM invoker: /home/boris/.sdkman/candidates/java/17.0.3.6.1-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.apache.kafka.jmh.acl.AuthorizerBenchmark.testUpdateCache
# Parameters: (aclCount = 500, authorizerType = ACL, denyPercentage = 50, resourceCount = 5000)

# Run progress: 75.00% complete, ETA 00:03:35
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: 615.874 ms/op
# Warmup Iteration   2: 563.510 ms/op
# Warmup Iteration   3: 548.630 ms/op
Iteration   1: 560.484 ms/op
Iteration   2: 557.977 ms/op
                 async: (text only)

# Processing profiler results: AsyncProfiler


Result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testUpdateCache":
  559.231 ms/op

Secondary result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testUpdateCache:async":
Async profiler results:
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testUpdateCache-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-forward.html
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testUpdateCache-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-reverse.html


# Run complete. Total time: 00:14:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              (aclCount)  (authorizerType)  (denyPercentage)  (resourceCount)  Mode  Cnt    Score   Error  Units
AuthorizerBenchmark.testAclsIterator                          500               ACL                50             5000  avgt    2  394.616          ms/op
AuthorizerBenchmark.testAclsIterator:async                    500               ACL                50             5000  avgt           NaN            ---
AuthorizerBenchmark.testAuthorizeByResourceType               500               ACL                50             5000  avgt    2    3.776          ms/op
AuthorizerBenchmark.testAuthorizeByResourceType:async         500               ACL                50             5000  avgt           NaN            ---
AuthorizerBenchmark.testAuthorizer                            500               ACL                50             5000  avgt    2    0.164          ms/op
AuthorizerBenchmark.testAuthorizer:async                      500               ACL                50             5000  avgt           NaN            ---
AuthorizerBenchmark.testUpdateCache                           500               ACL                50             5000  avgt    2  559.231          ms/op
AuthorizerBenchmark.testUpdateCache:async                     500               ACL                50             5000  avgt           NaN            ---
JMH benchmarks done
