/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.kafka.common.metrics;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.apache.kafka.common.serialization.StringSerializer;
import org.junit.Test;

import java.util.Properties;

public class MetricsReporterTest {
    @Test
    public void testAutoGeneratedClientId() {
        // producer auto generated client id
        Properties producerProps = new Properties();
        producerProps.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9999");
        producerProps.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, AutoGeneratedClientIdTestMetricsReporter.class.getName());

        KafkaProducer<String, String> producer = new KafkaProducer<>(
                producerProps, new StringSerializer(), new StringSerializer());

        producer.close();

        // consumer auto generated client id
        Properties consumerProps = new Properties();
        consumerProps.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9999");
        consumerProps.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, AutoGeneratedClientIdTestMetricsReporter.class.getName());

        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(
                consumerProps, new StringDeserializer(), new StringDeserializer());

        consumer.close();
    }

    @Test
    public void testUserSpecifiedClientId() {
        // producer user specified client id
        Properties producerProps = new Properties();
        producerProps.setProperty(ProducerConfig.CLIENT_ID_CONFIG, "user-specified");
        producerProps.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9999");
        producerProps.setProperty(ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG, UserSpecifiedClientIdTestMetricsReporter.class.getName());

        KafkaProducer<String, String> producer = new KafkaProducer<>(
                producerProps, new StringSerializer(), new StringSerializer());

        producer.close();

        // consumer user specified client id
        Properties consumerProps = new Properties();
        consumerProps.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, "user-specified");
        consumerProps.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9999");
        consumerProps.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, UserSpecifiedClientIdTestMetricsReporter.class.getName());

        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(
                consumerProps, new StringDeserializer(), new StringDeserializer());

        consumer.close();
    }
}
