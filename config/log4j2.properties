# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Unspecified loggers and loggers with additivity=true output to server.log and stdout
# Note that INFO only applies to unspecified loggers, the log level of the child logger is used otherwise
name=KafkaLogConfig
appenders=stdout,kafkaAppender,stateChangeAppender,requestAppender,cleanerAppender,controllerAppender,authorizerAppender

# Console appender (stdout)
appender.stdout.type=Console
appender.stdout.name=STDOUT
appender.stdout.layout.type=PatternLayout
appender.stdout.layout.pattern=[%d] %p %m (%c)%n

appender.kafkaAppender.type=RollingFile
appender.kafkaAppender.name=KafkaAppender
appender.kafkaAppender.fileName=${kafka.logs.dir}/server.log
appender.kafkaAppender.filePattern=${kafka.logs.dir}/server.log.%d{yyyy-MM-dd-HH}
appender.kafkaAppender.layout.type=PatternLayout
appender.kafkaAppender.layout.pattern=[%d] %p %m (%c)%n
appender.kafkaAppender.policies.type=TimeBasedTriggeringPolicy
appender.kafkaAppender.policies.interval=1
appender.kafkaAppender.policies.modulate=true

# State Change appender
appender.stateChangeAppender.type=RollingFile
appender.stateChangeAppender.name=StateChangeAppender
appender.stateChangeAppender.fileName=${kafka.logs.dir}/state-change.log
appender.stateChangeAppender.filePattern=${kafka.logs.dir}/state-change.log.%d{yyyy-MM-dd-HH}
appender.stateChangeAppender.layout.type=PatternLayout
appender.stateChangeAppender.layout.pattern=[%d] %p %m (%c)%n
appender.stateChangeAppender.policies.type=TimeBasedTriggeringPolicy
appender.stateChangeAppender.policies.interval=1
appender.stateChangeAppender.policies.modulate=true

# Request appender
appender.requestAppender.type=RollingFile
appender.requestAppender.name=RequestAppender
appender.requestAppender.fileName=${kafka.logs.dir}/kafka-request.log
appender.requestAppender.filePattern=${kafka.logs.dir}/kafka-request.log.%d{yyyy-MM-dd-HH}
appender.requestAppender.layout.type=PatternLayout
appender.requestAppender.layout.pattern=[%d] %p %m (%c)%n
appender.requestAppender.policies.type=TimeBasedTriggeringPolicy
appender.requestAppender.policies.interval=1
appender.requestAppender.policies.modulate=true

# Cleaner appender
appender.cleanerAppender.type=RollingFile
appender.cleanerAppender.name=CleanerAppender
appender.cleanerAppender.fileName=${kafka.logs.dir}/log-cleaner.log
appender.cleanerAppender.filePattern=${kafka.logs.dir}/log-cleaner.log.%d{yyyy-MM-dd-HH}
appender.cleanerAppender.layout.type=PatternLayout
appender.cleanerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.cleanerAppender.policies.type=TimeBasedTriggeringPolicy
appender.cleanerAppender.policies.interval=1
appender.cleanerAppender.policies.modulate=true

# Controller appender
appender.controllerAppender.type=RollingFile
appender.controllerAppender.name=ControllerAppender
appender.controllerAppender.fileName=${kafka.logs.dir}/controller.log
appender.controllerAppender.filePattern=${kafka.logs.dir}/controller.log.%d{yyyy-MM-dd-HH}
appender.controllerAppender.layout.type=PatternLayout
appender.controllerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.controllerAppender.policies.type=TimeBasedTriggeringPolicy
appender.controllerAppender.policies.interval=1
appender.controllerAppender.policies.modulate=true

# Authorizer appender
appender.authorizerAppender.type=RollingFile
appender.authorizerAppender.name=AuthorizerAppender
appender.authorizerAppender.fileName=${kafka.logs.dir}/kafka-authorizer.log
appender.authorizerAppender.filePattern=${kafka.logs.dir}/kafka-authorizer.log.%d{yyyy-MM-dd-HH}
appender.authorizerAppender.layout.type=PatternLayout
appender.authorizerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.authorizerAppender.policies.type=TimeBasedTriggeringPolicy
appender.authorizerAppender.policies.interval=1
appender.authorizerAppender.policies.modulate=true

rootLogger.level=INFO
rootLogger.appenderRefs=stdout,kafkaAppender
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.kafkaAppender.ref=KafkaAppender

loggers=org.apache.zookeeper,kafka,org.apache.kafka,kafka.request.logger,kafka.network.RequestChannel$,org.apache.kafka.controller,kafka.controller,kafka.log.LogCleaner,state.change.logger,kafka.authorizer.logger

# Zookeeper logger
logger.org.apache.zookeeper.name=org.apache.zookeeper
logger.org.apache.zookeeper.level=INFO
logger.org.apache.zookeeper.additivity=false
logger.org.apache.zookeeper.appenderRef.kafkaAppender.ref=KafkaAppender

# Kafka logger
logger.kafka.name=kafka
logger.kafka.level=INFO
logger.kafka.additivity=false
logger.kafka.appenderRef.kafkaAppender.ref=KafkaAppender

# Kafka org.apache logger
logger.org.apache.kafka.name=org.apache.kafka
logger.org.apache.kafka.level=INFO
logger.org.apache.kafka.additivity=false
logger.org.apache.kafka.appenderRef.kafkaAppender.ref=KafkaAppender

# Kafka request logger
logger.kafka.request.logger.name=kafka.request.logger
logger.kafka.request.logger.level=WARN
logger.kafka.request.logger.additivity=false
logger.kafka.request.logger.appenderRef.requestAppender.ref=RequestAppender

# Kafka network RequestChannel$ logger
logger.kafka.network.RequestChannel$.name=kafka.network.RequestChannel$
logger.kafka.network.RequestChannel$.level=WARN
logger.kafka.network.RequestChannel$.additivity=false
logger.kafka.network.RequestChannel$.appenderRef.requestAppender.ref=RequestAppender

# KRaft mode controller logger
logger.org.apache.kafka.controller.name=org.apache.kafka.controller
logger.org.apache.kafka.controller.level=INFO
logger.org.apache.kafka.controller.additivity=false
logger.org.apache.kafka.controller.appenderRef.controllerAppender.ref=ControllerAppender

# ZK mode controller logger
logger.kafka.controller.name=kafka.controller
logger.kafka.controller.level=TRACE
logger.kafka.controller.additivity=false
logger.kafka.controller.appenderRef.controllerAppender.ref=ControllerAppender

# LogCleaner logger
logger.kafka.log.LogCleaner.name=kafka.log.LogCleaner
logger.kafka.log.LogCleaner.level=INFO
logger.kafka.log.LogCleaner.additivity=false
logger.kafka.log.LogCleaner.appenderRef.cleanerAppender.ref=CleanerAppender

# State change logger
logger.state.change.logger.name=state.change.logger
logger.state.change.logger.level=INFO
logger.state.change.logger.additivity=false
logger.state.change.logger.appenderRef.stateChangeAppender.ref=StateChangeAppender

# Authorizer logger
logger.kafka.authorizer.logger.name=kafka.authorizer.logger
logger.kafka.authorizer.logger.level=INFO
logger.kafka.authorizer.logger.additivity=false
logger.kafka.authorizer.logger.appenderRef.authorizerAppender.ref=AuthorizerAppender
