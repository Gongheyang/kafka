{
  "requestHeaders": [
    {
      "bnf": "request_api_key request_api_version correlation_id \n  request_api_key => INT16\n  request_api_version => INT16\n  correlation_id => INT32\n",
      "version": 0,
      "fields": [
        {
          "field": "request_api_key",
          "documentation": "The API key of this request.",
          "defaultValue": ""
        },
        {
          "field": "request_api_version",
          "documentation": "The API version of this request.",
          "defaultValue": ""
        },
        {
          "field": "correlation_id",
          "documentation": "The correlation ID of this request.",
          "defaultValue": ""
        }
      ]
    },
    {
      "bnf": "request_api_key request_api_version correlation_id client_id \n  request_api_key => INT16\n  request_api_version => INT16\n  correlation_id => INT32\n  client_id => NULLABLE_STRING\n",
      "version": 1,
      "fields": [
        {
          "field": "request_api_key",
          "documentation": "The API key of this request.",
          "defaultValue": ""
        },
        {
          "field": "request_api_version",
          "documentation": "The API version of this request.",
          "defaultValue": ""
        },
        {
          "field": "correlation_id",
          "documentation": "The correlation ID of this request.",
          "defaultValue": ""
        },
        {
          "field": "client_id",
          "documentation": "The client ID string.",
          "defaultValue": ""
        }
      ]
    },
    {
      "bnf": "request_api_key request_api_version correlation_id client_id TAG_BUFFER \n  request_api_key => INT16\n  request_api_version => INT16\n  correlation_id => INT32\n  client_id => NULLABLE_STRING\n",
      "version": 2,
      "fields": [
        {
          "field": "request_api_key",
          "documentation": "The API key of this request.",
          "defaultValue": ""
        },
        {
          "field": "request_api_version",
          "documentation": "The API version of this request.",
          "defaultValue": ""
        },
        {
          "field": "correlation_id",
          "documentation": "The correlation ID of this request.",
          "defaultValue": ""
        },
        {
          "field": "client_id",
          "documentation": "The client ID string.",
          "defaultValue": ""
        },
        {
          "field": "_tagged_fields",
          "documentation": "The tagged fields",
          "defaultValue": ""
        }
      ]
    }
  ],
  "responseHeaders": [
    {
      "bnf": "correlation_id \n  correlation_id => INT32\n",
      "version": 0,
      "fields": [
        {
          "field": "correlation_id",
          "documentation": "The correlation ID of this response.",
          "defaultValue": ""
        }
      ]
    },
    {
      "bnf": "correlation_id TAG_BUFFER \n  correlation_id => INT32\n",
      "version": 1,
      "fields": [
        {
          "field": "correlation_id",
          "documentation": "The correlation ID of this response.",
          "defaultValue": ""
        },
        {
          "field": "_tagged_fields",
          "documentation": "The tagged fields",
          "defaultValue": ""
        }
      ]
    }
  ],
  "apis": [
    {
      "id": 0,
      "name": "Produce",
      "requests": [
        {
          "version": 0,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "transactional_id acks timeout_ms [topic_data] TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_data => index records TAG_BUFFER \n      index => INT32\n      records => COMPACT_RECORDS\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional ID, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "acks",
              "documentation": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The timeout to await a response in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "topic_data",
              "documentation": "Each topic to produce to.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_data",
              "documentation": "Each partition to produce to.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data to be produced.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "acks timeout_ms [topic_data] \n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The log start offset.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The log start offset.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The log start offset.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "transactional_id acks timeout_ms [topic_data] \n  transactional_id => NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] \n    name => STRING\n    partition_data => index records \n      index => INT32\n      records => RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The log start offset.",
              "defaultValue": ""
            },
            {
              "field": "record_errors",
              "documentation": "The batch indices of records that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "batch_index",
              "documentation": "The batch index of the record that cause the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "batch_index_error_message",
              "documentation": "The error message of the record that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The global error message summarizing the common root cause of the records that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "transactional_id acks timeout_ms [topic_data] TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  acks => INT16\n  timeout_ms => INT32\n  topic_data => name [partition_data] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_data => index records TAG_BUFFER \n      index => INT32\n      records => COMPACT_RECORDS\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "Each produce response",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_responses",
              "documentation": "Each partition that we produced to within the topic.",
              "defaultValue": ""
            },
            {
              "field": "index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "base_offset",
              "documentation": "The base offset.",
              "defaultValue": ""
            },
            {
              "field": "log_append_time_ms",
              "documentation": "The timestamp returned by broker after appending the messages. If CreateTime is used for the topic, the timestamp will be -1.  If LogAppendTime is used for the topic, the timestamp will be the broker local time when the messages are appended.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The log start offset.",
              "defaultValue": ""
            },
            {
              "field": "record_errors",
              "documentation": "The batch indices of records that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "batch_index",
              "documentation": "The batch index of the record that cause the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "batch_index_error_message",
              "documentation": "The error message of the record that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The global error message summarizing the common root cause of the records that caused the batch to be dropped",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 1,
      "name": "Fetch",
      "requests": [
        {
          "version": 0,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 10,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 11,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  rack_id => STRING\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "Rack ID of the consumer making this request",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 12,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of the topic to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "last_fetched_epoch",
              "documentation": "The epoch of the last fetched record or -1 if there is none",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "Rack ID of the consumer making this request",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 13,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "last_fetched_epoch",
              "documentation": "The epoch of the last fetched record or -1 if there is none",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "Rack ID of the consumer making this request",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 14,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "last_fetched_epoch",
              "documentation": "The epoch of the last fetched record or -1 if there is none",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "Rack ID of the consumer making this request",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 15,
          "bnf": "max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "max_wait_ms",
              "documentation": "The maximum time in milliseconds to wait for the response.",
              "defaultValue": ""
            },
            {
              "field": "min_bytes",
              "documentation": "The minimum bytes to accumulate in the response.",
              "defaultValue": ""
            },
            {
              "field": "max_bytes",
              "documentation": "The maximum bytes to fetch.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID.",
              "defaultValue": ""
            },
            {
              "field": "session_epoch",
              "documentation": "The fetch session epoch, which is used for ordering requests in a session.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to fetch.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to fetch.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "fetch_offset",
              "documentation": "The message offset.",
              "defaultValue": ""
            },
            {
              "field": "last_fetched_epoch",
              "documentation": "The epoch of the last fetched record or -1 if there is none",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The earliest available offset of the follower replica.  The field is only used when the request is sent by the follower.",
              "defaultValue": ""
            },
            {
              "field": "partition_max_bytes",
              "documentation": "The maximum bytes to fetch from this partition.  See KIP-74 for cases where this limit may not be honored.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "forgotten_topics_data",
              "documentation": "In an incremental fetch request, the partitions to remove.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions indexes to forget.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "Rack ID of the consumer making this request",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "replica_id max_wait_ms min_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level [topics] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 10,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 11,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch fetch_offset log_start_offset partition_max_bytes \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  rack_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "preferred_read_replica",
              "documentation": "The preferred read replica for the consumer to use on its next fetch request",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 12,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "preferred_read_replica",
              "documentation": "The preferred read replica for the consumer to use on its next fetch request",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 13,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "preferred_read_replica",
              "documentation": "The preferred read replica for the consumer to use on its next fetch request",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 14,
          "bnf": "replica_id max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  replica_id => INT32\n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "preferred_read_replica",
              "documentation": "The preferred read replica for the consumer to use on its next fetch request",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 15,
          "bnf": "max_wait_ms min_bytes max_bytes isolation_level session_id session_epoch [topics] [forgotten_topics_data] rack_id TAG_BUFFER \n  max_wait_ms => INT32\n  min_bytes => INT32\n  max_bytes => INT32\n  isolation_level => INT8\n  session_id => INT32\n  session_epoch => INT32\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition current_leader_epoch fetch_offset last_fetched_epoch log_start_offset partition_max_bytes TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      fetch_offset => INT64\n      last_fetched_epoch => INT32\n      log_start_offset => INT64\n      partition_max_bytes => INT32\n  forgotten_topics_data => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n  rack_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "session_id",
              "documentation": "The fetch session ID, or 0 if this is not part of a fetch session.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The response topics.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The topic partitions.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no fetch error.",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "The current high water mark.",
              "defaultValue": ""
            },
            {
              "field": "last_stable_offset",
              "documentation": "The last stable offset (or LSO) of the partition. This is the last offset such that the state of all transactional records prior to this offset have been decided (ABORTED or COMMITTED)",
              "defaultValue": ""
            },
            {
              "field": "log_start_offset",
              "documentation": "The current log start offset.",
              "defaultValue": ""
            },
            {
              "field": "aborted_transactions",
              "documentation": "The aborted transactions.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id associated with the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "first_offset",
              "documentation": "The first offset in the aborted transaction.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "preferred_read_replica",
              "documentation": "The preferred read replica for the consumer to use on its next fetch request",
              "defaultValue": ""
            },
            {
              "field": "records",
              "documentation": "The record data.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 2,
      "name": "ListOffsets",
      "requests": [
        {
          "version": 0,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp max_num_offsets \n      partition_index => INT32\n      timestamp => INT64\n      max_num_offsets => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            },
            {
              "field": "max_num_offsets",
              "documentation": "The maximum number of offsets to report.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index current_leader_epoch timestamp \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index current_leader_epoch timestamp \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the requestor, or -1 if this request is being made by a normal consumer.",
              "defaultValue": ""
            },
            {
              "field": "isolation_level",
              "documentation": "This setting controls the visibility of transactional records. Using READ_UNCOMMITTED (isolation_level = 0) makes all records visible. With READ_COMMITTED (isolation_level = 1), non-transactional and COMMITTED transactional records are visible. To be more concrete, READ_COMMITTED returns all data from offsets smaller than the current LSO (last stable offset), and enables the inclusion of the list of aborted transactions in the result, which allows consumers to discard ABORTED transactional records",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the request.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the request.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "The current leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The current timestamp.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp max_num_offsets \n      partition_index => INT32\n      timestamp => INT64\n      max_num_offsets => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "old_style_offsets",
              "documentation": "The result offsets.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index timestamp \n      partition_index => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index current_leader_epoch timestamp \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "replica_id isolation_level [topics] \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index current_leader_epoch timestamp \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "replica_id isolation_level [topics] TAG_BUFFER \n  replica_id => INT32\n  isolation_level => INT8\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index current_leader_epoch timestamp TAG_BUFFER \n      partition_index => INT32\n      current_leader_epoch => INT32\n      timestamp => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "timestamp",
              "documentation": "The timestamp associated with the returned offset.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The returned offset.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 3,
      "name": "Metadata",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            },
            {
              "field": "include_cluster_authorized_operations",
              "documentation": "Whether to include cluster authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "include_topic_authorized_operations",
              "documentation": "Whether to include topic authorized operations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations TAG_BUFFER \n  topics => name TAG_BUFFER \n    name => COMPACT_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            },
            {
              "field": "include_cluster_authorized_operations",
              "documentation": "Whether to include cluster authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "include_topic_authorized_operations",
              "documentation": "Whether to include topic authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 10,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            },
            {
              "field": "include_cluster_authorized_operations",
              "documentation": "Whether to include cluster authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "include_topic_authorized_operations",
              "documentation": "Whether to include topic authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 11,
          "bnf": "[topics] allow_auto_topic_creation include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            },
            {
              "field": "include_topic_authorized_operations",
              "documentation": "Whether to include topic authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 12,
          "bnf": "[topics] allow_auto_topic_creation include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to fetch metadata for.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "allow_auto_topic_creation",
              "documentation": "If this is true, the broker may auto-create topics that we requested which do not already exist, if it is configured to do so.",
              "defaultValue": ""
            },
            {
              "field": "include_topic_authorized_operations",
              "documentation": "Whether to include topic authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] \n  topics => name \n    name => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "[topics] allow_auto_topic_creation \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations \n  topics => name \n    name => STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this topic.",
              "defaultValue": ""
            },
            {
              "field": "cluster_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this cluster.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations TAG_BUFFER \n  topics => name TAG_BUFFER \n    name => COMPACT_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "topic_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this topic.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this cluster.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 10,
          "bnf": "[topics] allow_auto_topic_creation include_cluster_authorized_operations include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_cluster_authorized_operations => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "topic_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this topic.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this cluster.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 11,
          "bnf": "[topics] allow_auto_topic_creation include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "topic_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this topic.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 12,
          "bnf": "[topics] allow_auto_topic_creation include_topic_authorized_operations TAG_BUFFER \n  topics => topic_id name TAG_BUFFER \n    topic_id => UUID\n    name => COMPACT_NULLABLE_STRING\n  allow_auto_topic_creation => BOOLEAN\n  include_topic_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The topic error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "is_internal",
              "documentation": "True if the topic is internal.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the leader broker.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "replica_nodes",
              "documentation": "The set of all nodes that host this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr_nodes",
              "documentation": "The set of nodes that are in sync with the leader for this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The set of offline replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "topic_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this topic.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 4,
      "name": "LeaderAndIsr",
      "requests": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    partition_epoch => INT32\n    replicas => INT32\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "The state of each partition, in a v0 or v1 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.  This is only present in v0 or v1.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] is_new \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    partition_epoch => INT32\n    replicas => INT32\n    is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "The state of each partition, in a v0 or v1 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.  This is only present in v0 or v1.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] is_new \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The replica IDs that we are adding this partition to, or null if no replicas are being added.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The replica IDs that we are removing this partition from, or null if no replicas are being removed.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The replica IDs that we are adding this partition to, or null if no replicas are being added.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The replica IDs that we are removing this partition from, or null if no replicas are being removed.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "controller_id controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "type",
              "documentation": "The type that indicates whether all topics are included in the request",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The replica IDs that we are adding this partition to, or null if no replicas are being added.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The replica IDs that we are removing this partition from, or null if no replicas are being removed.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "controller_id controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new leader_recovery_state TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n      leader_recovery_state => INT8\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "type",
              "documentation": "The type that indicates whether all topics are included in the request",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The replica IDs that we are adding this partition to, or null if no replicas are being added.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The replica IDs that we are removing this partition from, or null if no replicas are being removed.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new leader_recovery_state TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n      leader_recovery_state => INT8\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The current controller ID.",
              "defaultValue": ""
            },
            {
              "field": "is_kraft_controller",
              "documentation": "If KRaft controller id is used during migration. See KIP-866",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The current controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The current broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "type",
              "documentation": "The type that indicates whether all topics are included in the request",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition. The epoch is a monotonically increasing value which is incremented after every partition change. (Since the LeaderAndIsr request is only used by the legacy controller, this corresponds to the zkVersion)",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The replica IDs that we are adding this partition to, or null if no replicas are being added.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The replica IDs that we are removing this partition from, or null if no replicas are being removed.",
              "defaultValue": ""
            },
            {
              "field": "is_new",
              "documentation": "Whether the replica should have existed on the broker or not.",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_leaders",
              "documentation": "The current live leaders.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The leader's broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host_name",
              "documentation": "The leader's hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The leader's port.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    partition_epoch => INT32\n    replicas => INT32\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition in v0 to v4 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] is_new \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    partition_epoch => INT32\n    replicas => INT32\n    is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition in v0 to v4 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] is_new \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition in v0 to v4 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port \n    broker_id => INT32\n    host_name => STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition in v0 to v4 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition in v0 to v4 message.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "controller_id controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "controller_id controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new leader_recovery_state TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n      leader_recovery_state => INT8\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch type [topic_states] [live_leaders] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  type => INT8\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] partition_epoch [replicas] [adding_replicas] [removing_replicas] is_new leader_recovery_state TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      partition_epoch => INT32\n      replicas => INT32\n      adding_replicas => INT32\n      removing_replicas => INT32\n      is_new => BOOLEAN\n      leader_recovery_state => INT8\n  live_leaders => broker_id host_name port TAG_BUFFER \n    broker_id => INT32\n    host_name => COMPACT_STRING\n    port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "Each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 5,
      "name": "StopReplica",
      "requests": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch delete_partitions [ungrouped_partitions] \n  controller_id => INT32\n  controller_epoch => INT32\n  delete_partitions => BOOLEAN\n  ungrouped_partitions => topic_name partition_index \n    topic_name => STRING\n    partition_index => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "delete_partitions",
              "documentation": "Whether these partitions should be deleted.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partitions",
              "documentation": "The partitions to stop.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch broker_epoch delete_partitions [topics] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  delete_partitions => BOOLEAN\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "delete_partitions",
              "documentation": "Whether these partitions should be deleted.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to stop.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch broker_epoch delete_partitions [topics] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  delete_partitions => BOOLEAN\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "delete_partitions",
              "documentation": "Whether these partitions should be deleted.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to stop.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index leader_epoch delete_partition TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      delete_partition => BOOLEAN\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "delete_partition",
              "documentation": "Whether this partition should be deleted.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch [topic_states] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index leader_epoch delete_partition TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      delete_partition => BOOLEAN\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "is_kraft_controller",
              "documentation": "If KRaft controller id is used during migration. See KIP-866",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The state of each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "delete_partition",
              "documentation": "Whether this partition should be deleted.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch delete_partitions [ungrouped_partitions] \n  controller_id => INT32\n  controller_epoch => INT32\n  delete_partitions => BOOLEAN\n  ungrouped_partitions => topic_name partition_index \n    topic_name => STRING\n    partition_index => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "The responses for each partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no partition error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch broker_epoch delete_partitions [topics] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  delete_partitions => BOOLEAN\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "The responses for each partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no partition error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch broker_epoch delete_partitions [topics] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  delete_partitions => BOOLEAN\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "The responses for each partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no partition error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index leader_epoch delete_partition TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      delete_partition => BOOLEAN\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "The responses for each partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no partition error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch [topic_states] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index leader_epoch delete_partition TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      delete_partition => BOOLEAN\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "partition_errors",
              "documentation": "The responses for each partition.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no partition error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 6,
      "name": "UpdateMetadata",
      "requests": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id v0_host v0_port \n    id => INT32\n    v0_host => STRING\n    v0_port => INT32\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "In older versions of this RPC, each partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "In older versions of this RPC, the topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "v0_host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "v0_port",
              "documentation": "The broker port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] \n    id => INT32\n    endpoints => port host security_protocol \n      port => INT32\n      host => STRING\n      security_protocol => INT16\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "In older versions of this RPC, each partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "In older versions of this RPC, the topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host security_protocol \n      port => INT32\n      host => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "In older versions of this RPC, each partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "In older versions of this RPC, the topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "In older versions of this RPC, each partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "In older versions of this RPC, the topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n    offline_replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "ungrouped_partition_states",
              "documentation": "In older versions of this RPC, each partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "In older versions of this RPC, the topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The replicas of this partition which are offline.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "In newer versions of this RPC, each topic that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The replicas of this partition which are offline.",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "In newer versions of this RPC, each topic that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The replicas of this partition which are offline.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "In newer versions of this RPC, each topic that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The replicas of this partition which are offline.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "controller_id",
              "documentation": "The controller id.",
              "defaultValue": ""
            },
            {
              "field": "is_kraft_controller",
              "documentation": "If KRaft controller id is used during migration. See KIP-866",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "topic_states",
              "documentation": "In newer versions of this RPC, each topic that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic id.",
              "defaultValue": ""
            },
            {
              "field": "partition_states",
              "documentation": "The partition that we would like to update.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "controller_epoch",
              "documentation": "The controller epoch.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The ID of the broker which is the current partition leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The brokers which are in the ISR for this partition.",
              "defaultValue": ""
            },
            {
              "field": "zk_version",
              "documentation": "The Zookeeper version.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "All the replicas of this partition.",
              "defaultValue": ""
            },
            {
              "field": "offline_replicas",
              "documentation": "The replicas of this partition which are offline.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "live_brokers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "id",
              "documentation": "The broker id.",
              "defaultValue": ""
            },
            {
              "field": "endpoints",
              "documentation": "The broker endpoints.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The hostname of this endpoint",
              "defaultValue": ""
            },
            {
              "field": "listener",
              "documentation": "The listener name.",
              "defaultValue": ""
            },
            {
              "field": "security_protocol",
              "documentation": "The security protocol type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack which this broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id v0_host v0_port \n    id => INT32\n    v0_host => STRING\n    v0_port => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] \n    id => INT32\n    endpoints => port host security_protocol \n      port => INT32\n      host => STRING\n      security_protocol => INT16\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host security_protocol \n      port => INT32\n      host => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "controller_id controller_epoch [ungrouped_partition_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  ungrouped_partition_states => topic_name partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] \n    topic_name => STRING\n    partition_index => INT32\n    controller_epoch => INT32\n    leader => INT32\n    leader_epoch => INT32\n    isr => INT32\n    zk_version => INT32\n    replicas => INT32\n    offline_replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] \n    topic_name => STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack \n    id => INT32\n    endpoints => port host listener security_protocol \n      port => INT32\n      host => STRING\n      listener => STRING\n      security_protocol => INT16\n    rack => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "controller_id controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "controller_id is_kraft_controller controller_epoch broker_epoch [topic_states] [live_brokers] TAG_BUFFER \n  controller_id => INT32\n  is_kraft_controller => BOOLEAN\n  controller_epoch => INT32\n  broker_epoch => INT64\n  topic_states => topic_name topic_id [partition_states] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    topic_id => UUID\n    partition_states => partition_index controller_epoch leader leader_epoch [isr] zk_version [replicas] [offline_replicas] TAG_BUFFER \n      partition_index => INT32\n      controller_epoch => INT32\n      leader => INT32\n      leader_epoch => INT32\n      isr => INT32\n      zk_version => INT32\n      replicas => INT32\n      offline_replicas => INT32\n  live_brokers => id [endpoints] rack TAG_BUFFER \n    id => INT32\n    endpoints => port host listener security_protocol TAG_BUFFER \n      port => INT32\n      host => COMPACT_STRING\n      listener => COMPACT_STRING\n      security_protocol => INT16\n    rack => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 7,
      "name": "ControlledShutdown",
      "requests": [
        {
          "version": 0,
          "bnf": "broker_id \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The id of the broker for which controlled shutdown has been requested.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "broker_id \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The id of the broker for which controlled shutdown has been requested.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "broker_id broker_epoch \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The id of the broker for which controlled shutdown has been requested.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "broker_id broker_epoch TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The id of the broker for which controlled shutdown has been requested.",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The broker epoch.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "broker_id \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "remaining_partitions",
              "documentation": "The partitions that the broker still leads.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "broker_id \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "remaining_partitions",
              "documentation": "The partitions that the broker still leads.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "broker_id broker_epoch \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "remaining_partitions",
              "documentation": "The partitions that the broker still leads.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "broker_id broker_epoch TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "remaining_partitions",
              "documentation": "The partitions that the broker still leads.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 8,
      "name": "OffsetCommit",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset commit_timestamp committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      commit_timestamp => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "commit_timestamp",
              "documentation": "The timestamp of the commit.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "retention_time_ms",
              "documentation": "The time period in ms to retain the offset.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "retention_time_ms",
              "documentation": "The time period in ms to retain the offset.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "retention_time_ms",
              "documentation": "The time period in ms to retain the offset.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id generation_id member_id group_instance_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "group_id generation_id member_id group_instance_id [topics] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata TAG_BUFFER \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch of this partition.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset commit_timestamp committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      commit_timestamp => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id retention_time_ms [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  retention_time_ms => INT64\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id generation_id member_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id generation_id member_id group_instance_id [topics] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "group_id generation_id member_id group_instance_id [topics] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata TAG_BUFFER \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 9,
      "name": "OffsetFetch",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id [topics] TAG_BUFFER \n  group_id => COMPACT_STRING\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id [topics] require_stable TAG_BUFFER \n  group_id => COMPACT_STRING\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n  require_stable => BOOLEAN\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "require_stable",
              "documentation": "Whether broker should hold on returning unstable offsets but set a retriable error code for the partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "[groups] require_stable TAG_BUFFER \n  groups => group_id [topics] TAG_BUFFER \n    group_id => COMPACT_STRING\n    topics => name [partition_indexes] TAG_BUFFER \n      name => COMPACT_STRING\n      partition_indexes => INT32\n  require_stable => BOOLEAN\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "Each group we would like to fetch offsets for",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we would like to fetch offsets for, or null to fetch offsets for all topics.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partition indexes we would like to fetch offsets for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "require_stable",
              "documentation": "Whether broker should hold on returning unstable offsets but set a retriable error code for the partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partition_indexes] \n    name => STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id [topics] TAG_BUFFER \n  group_id => COMPACT_STRING\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id [topics] require_stable TAG_BUFFER \n  group_id => COMPACT_STRING\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n  require_stable => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "[groups] require_stable TAG_BUFFER \n  groups => group_id [topics] TAG_BUFFER \n    group_id => COMPACT_STRING\n    topics => name [partition_indexes] TAG_BUFFER \n      name => COMPACT_STRING\n      partition_indexes => INT32\n  require_stable => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "The responses per group id.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses per topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses per partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The committed message offset.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The partition metadata.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The group-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 10,
      "name": "FindCoordinator",
      "requests": [
        {
          "version": 0,
          "bnf": "key \n  key => STRING\n",
          "fields": [
            {
              "field": "key",
              "documentation": "The coordinator key.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "key key_type \n  key => STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "key",
              "documentation": "The coordinator key.",
              "defaultValue": ""
            },
            {
              "field": "key_type",
              "documentation": "The coordinator key type. (Group, transaction, etc.)",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "key key_type \n  key => STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "key",
              "documentation": "The coordinator key.",
              "defaultValue": ""
            },
            {
              "field": "key_type",
              "documentation": "The coordinator key type. (Group, transaction, etc.)",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "key key_type TAG_BUFFER \n  key => COMPACT_STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "key",
              "documentation": "The coordinator key.",
              "defaultValue": ""
            },
            {
              "field": "key_type",
              "documentation": "The coordinator key type. (Group, transaction, etc.)",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "key_type [coordinator_keys] TAG_BUFFER \n  key_type => INT8\n  coordinator_keys => COMPACT_STRING\n",
          "fields": [
            {
              "field": "key_type",
              "documentation": "The coordinator key type. (Group, transaction, etc.)",
              "defaultValue": ""
            },
            {
              "field": "coordinator_keys",
              "documentation": "The coordinator keys.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "key \n  key => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The node id.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host name.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "key key_type \n  key => STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The node id.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host name.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "key key_type \n  key => STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The node id.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host name.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "key key_type TAG_BUFFER \n  key => COMPACT_STRING\n  key_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The node id.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host name.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "key_type [coordinator_keys] TAG_BUFFER \n  key_type => INT8\n  coordinator_keys => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "coordinators",
              "documentation": "Each coordinator result in the response",
              "defaultValue": ""
            },
            {
              "field": "key",
              "documentation": "The coordinator key.",
              "defaultValue": ""
            },
            {
              "field": "node_id",
              "documentation": "The node id.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host name.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The port.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 11,
      "name": "JoinGroup",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id session_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] reason TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n  reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "reason",
              "documentation": "The reason why the member (re-)joins the group.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] reason TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n  reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "session_timeout_ms",
              "documentation": "The coordinator considers the consumer dead if it receives no heartbeat after this timeout in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "The maximum time in milliseconds that the coordinator will wait for each member to rejoin when rebalancing the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The unique name the for class of protocols implemented by the group we want to join.",
              "defaultValue": ""
            },
            {
              "field": "protocols",
              "documentation": "The list of protocols that the member supports.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The protocol name.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The protocol metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "reason",
              "documentation": "The reason why the member (re-)joins the group.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id session_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] \n  group_id => STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  protocol_type => STRING\n  protocols => name metadata \n    name => STRING\n    metadata => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol name.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 8,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] reason TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n  reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol name.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 9,
          "bnf": "group_id session_timeout_ms rebalance_timeout_ms member_id group_instance_id protocol_type [protocols] reason TAG_BUFFER \n  group_id => COMPACT_STRING\n  session_timeout_ms => INT32\n  rebalance_timeout_ms => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_STRING\n  protocols => name metadata TAG_BUFFER \n    name => COMPACT_STRING\n    metadata => COMPACT_BYTES\n  reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol name.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol selected by the coordinator.",
              "defaultValue": ""
            },
            {
              "field": "leader",
              "documentation": "The leader of the group.",
              "defaultValue": ""
            },
            {
              "field": "skip_assignment",
              "documentation": "True if the leader must skip running the assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The group member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "metadata",
              "documentation": "The group member metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 12,
      "name": "Heartbeat",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group id.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group id.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group id.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id group_instance_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group id.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id group_instance_id TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group id.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id group_instance_id \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id group_instance_id TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 13,
      "name": "LeaveGroup",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id [members] \n  group_id => STRING\n  members => member_id group_instance_id \n    member_id => STRING\n    group_instance_id => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member identities.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id [members] TAG_BUFFER \n  group_id => COMPACT_STRING\n  members => member_id group_instance_id TAG_BUFFER \n    member_id => COMPACT_STRING\n    group_instance_id => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member identities.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id [members] TAG_BUFFER \n  group_id => COMPACT_STRING\n  members => member_id group_instance_id reason TAG_BUFFER \n    member_id => COMPACT_STRING\n    group_instance_id => COMPACT_NULLABLE_STRING\n    reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The ID of the group to leave.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member identities.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "reason",
              "documentation": "The reason why the member left the group.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id member_id \n  group_id => STRING\n  member_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id [members] \n  group_id => STRING\n  members => member_id group_instance_id \n    member_id => STRING\n    group_instance_id => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member responses.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id [members] TAG_BUFFER \n  group_id => COMPACT_STRING\n  members => member_id group_instance_id TAG_BUFFER \n    member_id => COMPACT_STRING\n    group_instance_id => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member responses.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id [members] TAG_BUFFER \n  group_id => COMPACT_STRING\n  members => member_id group_instance_id reason TAG_BUFFER \n    member_id => COMPACT_STRING\n    group_instance_id => COMPACT_NULLABLE_STRING\n    reason => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "List of leaving member responses.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The group instance ID to remove from the group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 14,
      "name": "SyncGroup",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id group_instance_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id group_instance_id [assignments] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  assignments => member_id assignment TAG_BUFFER \n    member_id => COMPACT_STRING\n    assignment => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id generation_id member_id group_instance_id protocol_type protocol_name [assignments] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_NULLABLE_STRING\n  protocol_name => COMPACT_NULLABLE_STRING\n  assignments => member_id assignment TAG_BUFFER \n    member_id => COMPACT_STRING\n    assignment => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the group.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol name.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "Each assignment.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The ID of the member to assign.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "group_id generation_id member_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "group_id generation_id member_id group_instance_id [assignments] \n  group_id => STRING\n  generation_id => INT32\n  member_id => STRING\n  group_instance_id => NULLABLE_STRING\n  assignments => member_id assignment \n    member_id => STRING\n    assignment => BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "group_id generation_id member_id group_instance_id [assignments] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  assignments => member_id assignment TAG_BUFFER \n    member_id => COMPACT_STRING\n    assignment => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "group_id generation_id member_id group_instance_id protocol_type protocol_name [assignments] TAG_BUFFER \n  group_id => COMPACT_STRING\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  protocol_type => COMPACT_NULLABLE_STRING\n  protocol_name => COMPACT_NULLABLE_STRING\n  assignments => member_id assignment TAG_BUFFER \n    member_id => COMPACT_STRING\n    assignment => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            },
            {
              "field": "protocol_name",
              "documentation": "The group protocol name.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "The member assignment.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 15,
      "name": "DescribeGroups",
      "requests": [
        {
          "version": 0,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[groups] include_authorized_operations \n  groups => STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            },
            {
              "field": "include_authorized_operations",
              "documentation": "Whether to include authorized operations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[groups] include_authorized_operations \n  groups => STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            },
            {
              "field": "include_authorized_operations",
              "documentation": "Whether to include authorized operations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[groups] include_authorized_operations TAG_BUFFER \n  groups => COMPACT_STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "The names of the groups to describe",
              "defaultValue": ""
            },
            {
              "field": "include_authorized_operations",
              "documentation": "Whether to include authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[groups] \n  groups => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[groups] include_authorized_operations \n  groups => STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            },
            {
              "field": "authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[groups] include_authorized_operations \n  groups => STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            },
            {
              "field": "authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this group.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[groups] include_authorized_operations TAG_BUFFER \n  groups => COMPACT_STRING\n  include_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each described group.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The describe error, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID string.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state string, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "protocol_data",
              "documentation": "The group protocol data, or the empty string.",
              "defaultValue": ""
            },
            {
              "field": "members",
              "documentation": "The group members.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "client_id",
              "documentation": "The client ID used in the member's latest join group request.",
              "defaultValue": ""
            },
            {
              "field": "client_host",
              "documentation": "The client host.",
              "defaultValue": ""
            },
            {
              "field": "member_metadata",
              "documentation": "The metadata corresponding to the current group protocol in use.",
              "defaultValue": ""
            },
            {
              "field": "member_assignment",
              "documentation": "The current assignment provided by the group leader.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this group.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 16,
      "name": "ListGroups",
      "requests": [
        {
          "version": 0,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 1,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 2,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 3,
          "bnf": "TAG_BUFFER \n",
          "fields": [
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[states_filter] TAG_BUFFER \n  states_filter => COMPACT_STRING\n",
          "fields": [
            {
              "field": "states_filter",
              "documentation": "The states of the groups we want to list. If empty all groups are returned with their state.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each group in the response.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each group in the response.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each group in the response.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "TAG_BUFFER \n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each group in the response.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[states_filter] TAG_BUFFER \n  states_filter => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "groups",
              "documentation": "Each group in the response.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group ID.",
              "defaultValue": ""
            },
            {
              "field": "protocol_type",
              "documentation": "The group protocol type.",
              "defaultValue": ""
            },
            {
              "field": "group_state",
              "documentation": "The group state name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 17,
      "name": "SaslHandshake",
      "requests": [
        {
          "version": 0,
          "bnf": "mechanism \n  mechanism => STRING\n",
          "fields": [
            {
              "field": "mechanism",
              "documentation": "The SASL mechanism chosen by the client.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "mechanism \n  mechanism => STRING\n",
          "fields": [
            {
              "field": "mechanism",
              "documentation": "The SASL mechanism chosen by the client.",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "mechanism \n  mechanism => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "mechanisms",
              "documentation": "The mechanisms enabled in the server.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "mechanism \n  mechanism => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "mechanisms",
              "documentation": "The mechanisms enabled in the server.",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 18,
      "name": "ApiVersions",
      "requests": [
        {
          "version": 0,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 1,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 2,
          "bnf": "\n",
          "fields": []
        },
        {
          "version": 3,
          "bnf": "client_software_name client_software_version TAG_BUFFER \n  client_software_name => COMPACT_STRING\n  client_software_version => COMPACT_STRING\n",
          "fields": [
            {
              "field": "client_software_name",
              "documentation": "The name of the client.",
              "defaultValue": ""
            },
            {
              "field": "client_software_version",
              "documentation": "The version of the client.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "api_keys",
              "documentation": "The APIs supported by the broker.",
              "defaultValue": ""
            },
            {
              "field": "api_key",
              "documentation": "The API index.",
              "defaultValue": ""
            },
            {
              "field": "min_version",
              "documentation": "The minimum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "max_version",
              "documentation": "The maximum supported version, inclusive.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "api_keys",
              "documentation": "The APIs supported by the broker.",
              "defaultValue": ""
            },
            {
              "field": "api_key",
              "documentation": "The API index.",
              "defaultValue": ""
            },
            {
              "field": "min_version",
              "documentation": "The minimum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "max_version",
              "documentation": "The maximum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "api_keys",
              "documentation": "The APIs supported by the broker.",
              "defaultValue": ""
            },
            {
              "field": "api_key",
              "documentation": "The API index.",
              "defaultValue": ""
            },
            {
              "field": "min_version",
              "documentation": "The minimum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "max_version",
              "documentation": "The maximum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "client_software_name client_software_version TAG_BUFFER \n  client_software_name => COMPACT_STRING\n  client_software_version => COMPACT_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code.",
              "defaultValue": ""
            },
            {
              "field": "api_keys",
              "documentation": "The APIs supported by the broker.",
              "defaultValue": ""
            },
            {
              "field": "api_key",
              "documentation": "The API index.",
              "defaultValue": ""
            },
            {
              "field": "min_version",
              "documentation": "The minimum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "max_version",
              "documentation": "The maximum supported version, inclusive.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 19,
      "name": "CreateTopics",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The topics to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "The number of partitions to create in the topic, or -1 if we are either specifying a manual partition assignment or using the default partitions.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "The number of replicas to create for each partition in the topic, or -1 if we are either specifying a manual partition assignment or using the default replication factor.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The manual partition assignment, or the empty array if we are using automatic assignment.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The brokers to place the partition on.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The custom topic configurations to set.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, check that the topics can be created as specified, but don't create anything.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name num_partitions replication_factor [assignments] [configs] \n    name => STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "Number of partitions of the topic.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "Replication factor of the topic.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Configuration of the topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "Number of partitions of the topic.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "Replication factor of the topic.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Configuration of the topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 7,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name num_partitions replication_factor [assignments] [configs] TAG_BUFFER \n    name => COMPACT_STRING\n    num_partitions => INT32\n    replication_factor => INT16\n    assignments => partition_index [broker_ids] TAG_BUFFER \n      partition_index => INT32\n      broker_ids => INT32\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Results for each topic we tried to create.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "num_partitions",
              "documentation": "Number of partitions of the topic.",
              "defaultValue": ""
            },
            {
              "field": "replication_factor",
              "documentation": "Replication factor of the topic.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Configuration of the topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 20,
      "name": "DeleteTopics",
      "requests": [
        {
          "version": 0,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topic_names] timeout_ms TAG_BUFFER \n  topic_names => COMPACT_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topic_names] timeout_ms TAG_BUFFER \n  topic_names => COMPACT_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_names",
              "documentation": "The names of the topics to delete",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] timeout_ms TAG_BUFFER \n  topics => name topic_id TAG_BUFFER \n    name => COMPACT_NULLABLE_STRING\n    topic_id => UUID\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "The name or topic ID of the topic",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The length of time in milliseconds to wait for the deletions to complete.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topic_names] timeout_ms \n  topic_names => STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topic_names] timeout_ms TAG_BUFFER \n  topic_names => COMPACT_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 5,
          "bnf": "[topic_names] timeout_ms TAG_BUFFER \n  topic_names => COMPACT_STRING\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 6,
          "bnf": "[topics] timeout_ms TAG_BUFFER \n  topics => name topic_id TAG_BUFFER \n    name => COMPACT_NULLABLE_STRING\n    topic_id => UUID\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The results for each topic we tried to delete.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "the unique topic ID",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 21,
      "name": "DeleteRecords",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms \n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index offset \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The deletion offset.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait for the deletion to complete, in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms \n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index offset \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The deletion offset.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait for the deletion to complete, in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms TAG_BUFFER \n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index offset TAG_BUFFER \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we want to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "offset",
              "documentation": "The deletion offset.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "How long to wait for the deletion to complete, in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms \n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index offset \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "low_watermark",
              "documentation": "The partition low water mark.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms \n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index offset \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "low_watermark",
              "documentation": "The partition low water mark.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms TAG_BUFFER \n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index offset TAG_BUFFER \n      partition_index => INT32\n      offset => INT64\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition that we wanted to delete records from.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "low_watermark",
              "documentation": "The partition low water mark.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 22,
      "name": "InitProducerId",
      "requests": [
        {
          "version": 0,
          "bnf": "transactional_id transaction_timeout_ms \n  transactional_id => NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "The time in ms to wait before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id transaction_timeout_ms \n  transactional_id => NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "The time in ms to wait before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id transaction_timeout_ms TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "The time in ms to wait before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id transaction_timeout_ms producer_id producer_epoch TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n  producer_id => INT64\n  producer_epoch => INT16\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "The time in ms to wait before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id. This is used to disambiguate requests if a transactional id is reused following its expiration.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The producer's current epoch. This will be checked against the producer epoch on the broker, and the request will return an error if they do not match.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "transactional_id transaction_timeout_ms producer_id producer_epoch TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n  producer_id => INT64\n  producer_epoch => INT16\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id, or null if the producer is not transactional.",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "The time in ms to wait before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer id. This is used to disambiguate requests if a transactional id is reused following its expiration.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The producer's current epoch. This will be checked against the producer epoch on the broker, and the request will return an error if they do not match.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "transactional_id transaction_timeout_ms \n  transactional_id => NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer id.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id transaction_timeout_ms \n  transactional_id => NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer id.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id transaction_timeout_ms TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id transaction_timeout_ms producer_id producer_epoch TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n  producer_id => INT64\n  producer_epoch => INT16\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "transactional_id transaction_timeout_ms producer_id producer_epoch TAG_BUFFER \n  transactional_id => COMPACT_NULLABLE_STRING\n  transaction_timeout_ms => INT32\n  producer_id => INT64\n  producer_epoch => INT16\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 23,
      "name": "OffsetForLeaderEpoch",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition leader_epoch \n      partition => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The epoch to look up an offset for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition leader_epoch \n      partition => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The epoch to look up an offset for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch leader_epoch \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "An epoch used to fence consumers/replicas with old metadata. If the epoch provided by the client is larger than the current epoch known to the broker, then the UNKNOWN_LEADER_EPOCH error code will be returned. If the provided epoch is smaller, then the FENCED_LEADER_EPOCH error code will be returned.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The epoch to look up an offset for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch leader_epoch \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "An epoch used to fence consumers/replicas with old metadata. If the epoch provided by the client is larger than the current epoch known to the broker, then the UNKNOWN_LEADER_EPOCH error code will be returned. If the provided epoch is smaller, then the FENCED_LEADER_EPOCH error code will be returned.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The epoch to look up an offset for.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id [topics] TAG_BUFFER \n  replica_id => INT32\n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => partition current_leader_epoch leader_epoch TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "replica_id",
              "documentation": "The broker ID of the follower, of -1 if this request is from a consumer.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to get offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "current_leader_epoch",
              "documentation": "An epoch used to fence consumers/replicas with old metadata. If the epoch provided by the client is larger than the current epoch known to the broker, then the UNKNOWN_LEADER_EPOCH error code will be returned. If the provided epoch is smaller, then the FENCED_LEADER_EPOCH error code will be returned.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The epoch to look up an offset for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition leader_epoch \n      partition => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code 0, or if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "end_offset",
              "documentation": "The end offset of the epoch.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition leader_epoch \n      partition => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code 0, or if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "end_offset",
              "documentation": "The end offset of the epoch.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch leader_epoch \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code 0, or if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "end_offset",
              "documentation": "The end offset of the epoch.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "replica_id [topics] \n  replica_id => INT32\n  topics => topic [partitions] \n    topic => STRING\n    partitions => partition current_leader_epoch leader_epoch \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code 0, or if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "end_offset",
              "documentation": "The end offset of the epoch.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "replica_id [topics] TAG_BUFFER \n  replica_id => INT32\n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => partition current_leader_epoch leader_epoch TAG_BUFFER \n      partition => INT32\n      current_leader_epoch => INT32\n      leader_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the topic we fetched offsets for.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code 0, or if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "partition",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of the partition.",
              "defaultValue": ""
            },
            {
              "field": "end_offset",
              "documentation": "The end offset of the epoch.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 24,
      "name": "AddPartitionsToTxn",
      "requests": [
        {
          "version": 0,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "v3_and_below_transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_topics",
              "documentation": "The partitions to add to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes to add to the transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "v3_and_below_transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_topics",
              "documentation": "The partitions to add to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes to add to the transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "v3_and_below_transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_topics",
              "documentation": "The partitions to add to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes to add to the transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] TAG_BUFFER \n  v3_and_below_transactional_id => COMPACT_STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "v3_and_below_transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "v3_and_below_topics",
              "documentation": "The partitions to add to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes to add to the transaction",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[transactions] TAG_BUFFER \n  transactions => transactional_id producer_id producer_epoch verify_only [topics] TAG_BUFFER \n    transactional_id => COMPACT_STRING\n    producer_id => INT64\n    producer_epoch => INT16\n    verify_only => BOOLEAN\n    topics => name [partitions] TAG_BUFFER \n      name => COMPACT_STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "transactions",
              "documentation": "List of transactions to add partitions to.",
              "defaultValue": ""
            },
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "verify_only",
              "documentation": "Boolean to signify if we want to check if the partition is in the transaction rather than add it.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The partitions to add to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes to add to the transaction",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results_by_topic_v3_and_below",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "results_by_partition",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "partition_error_code",
              "documentation": "The response error code.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results_by_topic_v3_and_below",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "results_by_partition",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "partition_error_code",
              "documentation": "The response error code.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] \n  v3_and_below_transactional_id => STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] \n    name => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results_by_topic_v3_and_below",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "results_by_partition",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "partition_error_code",
              "documentation": "The response error code.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "v3_and_below_transactional_id v3_and_below_producer_id v3_and_below_producer_epoch [v3_and_below_topics] TAG_BUFFER \n  v3_and_below_transactional_id => COMPACT_STRING\n  v3_and_below_producer_id => INT64\n  v3_and_below_producer_epoch => INT16\n  v3_and_below_topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results_by_topic_v3_and_below",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "results_by_partition",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "partition_error_code",
              "documentation": "The response error code.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[transactions] TAG_BUFFER \n  transactions => transactional_id producer_id producer_epoch verify_only [topics] TAG_BUFFER \n    transactional_id => COMPACT_STRING\n    producer_id => INT64\n    producer_epoch => INT16\n    verify_only => BOOLEAN\n    topics => name [partitions] TAG_BUFFER \n      name => COMPACT_STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The response top level error code.",
              "defaultValue": ""
            },
            {
              "field": "results_by_transaction",
              "documentation": "Results categorized by transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "topic_results",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "results_by_partition",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "partition_error_code",
              "documentation": "The response error code.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 25,
      "name": "AddOffsetsToTxn",
      "requests": [
        {
          "version": 0,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id producer_id producer_epoch group_id TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The transactional id corresponding to the transaction.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "Current producer id in use by the transactional id.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "Current epoch associated with the producer id.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The response error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The response error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id producer_id producer_epoch group_id \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The response error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id producer_id producer_epoch group_id TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  group_id => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The response error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 26,
      "name": "EndTxn",
      "requests": [
        {
          "version": 0,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction to end.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer.",
              "defaultValue": ""
            },
            {
              "field": "committed",
              "documentation": "True if the transaction was committed, false if it was aborted.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction to end.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer.",
              "defaultValue": ""
            },
            {
              "field": "committed",
              "documentation": "True if the transaction was committed, false if it was aborted.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction to end.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer.",
              "defaultValue": ""
            },
            {
              "field": "committed",
              "documentation": "True if the transaction was committed, false if it was aborted.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id producer_id producer_epoch committed TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction to end.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer.",
              "defaultValue": ""
            },
            {
              "field": "committed",
              "documentation": "True if the transaction was committed, false if it was aborted.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id producer_id producer_epoch committed \n  transactional_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id producer_id producer_epoch committed TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  committed => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 27,
      "name": "WriteTxnMarkers",
      "requests": [
        {
          "version": 0,
          "bnf": "[markers] \n  markers => producer_id producer_epoch transaction_result [topics] coordinator_epoch \n    producer_id => INT64\n    producer_epoch => INT16\n    transaction_result => BOOLEAN\n    topics => name [partition_indexes] \n      name => STRING\n      partition_indexes => INT32\n    coordinator_epoch => INT32\n",
          "fields": [
            {
              "field": "markers",
              "documentation": "The transaction markers to be written.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "transaction_result",
              "documentation": "The result of the transaction to write to the partitions (false = ABORT, true = COMMIT).",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to write transaction marker(s) for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The indexes of the partitions to write transaction markers for.",
              "defaultValue": ""
            },
            {
              "field": "coordinator_epoch",
              "documentation": "Epoch associated with the transaction state partition hosted by this transaction coordinator",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[markers] TAG_BUFFER \n  markers => producer_id producer_epoch transaction_result [topics] coordinator_epoch TAG_BUFFER \n    producer_id => INT64\n    producer_epoch => INT16\n    transaction_result => BOOLEAN\n    topics => name [partition_indexes] TAG_BUFFER \n      name => COMPACT_STRING\n      partition_indexes => INT32\n    coordinator_epoch => INT32\n",
          "fields": [
            {
              "field": "markers",
              "documentation": "The transaction markers to be written.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "transaction_result",
              "documentation": "The result of the transaction to write to the partitions (false = ABORT, true = COMMIT).",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to write transaction marker(s) for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The indexes of the partitions to write transaction markers for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "coordinator_epoch",
              "documentation": "Epoch associated with the transaction state partition hosted by this transaction coordinator",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[markers] \n  markers => producer_id producer_epoch transaction_result [topics] coordinator_epoch \n    producer_id => INT64\n    producer_epoch => INT16\n    transaction_result => BOOLEAN\n    topics => name [partition_indexes] \n      name => STRING\n      partition_indexes => INT32\n    coordinator_epoch => INT32\n",
          "fields": [
            {
              "field": "markers",
              "documentation": "The results for writing makers.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The results by topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The results by partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[markers] TAG_BUFFER \n  markers => producer_id producer_epoch transaction_result [topics] coordinator_epoch TAG_BUFFER \n    producer_id => INT64\n    producer_epoch => INT16\n    transaction_result => BOOLEAN\n    topics => name [partition_indexes] TAG_BUFFER \n      name => COMPACT_STRING\n      partition_indexes => INT32\n    coordinator_epoch => INT32\n",
          "fields": [
            {
              "field": "markers",
              "documentation": "The results for writing makers.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The results by topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The results by partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 28,
      "name": "TxnOffsetCommit",
      "requests": [
        {
          "version": 0,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions inside the topic that we want to committ offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition within the topic.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions inside the topic that we want to committ offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition within the topic.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions inside the topic that we want to committ offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition within the topic.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch of the last consumed record.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id group_id producer_id producer_epoch generation_id member_id group_instance_id [topics] TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  group_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata TAG_BUFFER \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "transactional_id",
              "documentation": "The ID of the transaction.",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The ID of the group.",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "The current producer ID in use by the transactional ID.",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "The current epoch associated with the producer ID.",
              "defaultValue": ""
            },
            {
              "field": "generation_id",
              "documentation": "The generation of the consumer.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member ID assigned by the group coordinator.",
              "defaultValue": ""
            },
            {
              "field": "group_instance_id",
              "documentation": "The unique identifier of the consumer instance provided by end user.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic that we want to commit offsets for.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions inside the topic that we want to committ offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition within the topic.",
              "defaultValue": ""
            },
            {
              "field": "committed_offset",
              "documentation": "The message offset to be committed.",
              "defaultValue": ""
            },
            {
              "field": "committed_leader_epoch",
              "documentation": "The leader epoch of the last consumed record.",
              "defaultValue": ""
            },
            {
              "field": "committed_metadata",
              "documentation": "Any associated metadata the client wants to keep.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "transactional_id group_id producer_id producer_epoch [topics] \n  transactional_id => STRING\n  group_id => STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "transactional_id group_id producer_id producer_epoch generation_id member_id group_instance_id [topics] TAG_BUFFER \n  transactional_id => COMPACT_STRING\n  group_id => COMPACT_STRING\n  producer_id => INT64\n  producer_epoch => INT16\n  generation_id => INT32\n  member_id => COMPACT_STRING\n  group_instance_id => COMPACT_NULLABLE_STRING\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index committed_offset committed_leader_epoch committed_metadata TAG_BUFFER \n      partition_index => INT32\n      committed_offset => INT64\n      committed_leader_epoch => INT32\n      committed_metadata => COMPACT_NULLABLE_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 29,
      "name": "DescribeAcls",
      "requests": [
        {
          "version": 0,
          "bnf": "resource_type_filter resource_name_filter principal_filter host_filter operation permission_type \n  resource_type_filter => INT8\n  resource_name_filter => NULLABLE_STRING\n  principal_filter => NULLABLE_STRING\n  host_filter => NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name, or null to match any resource name.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal to match, or null to match any principal.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host to match, or null to match any host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation to match.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type to match.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type \n  resource_type_filter => INT8\n  resource_name_filter => NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => NULLABLE_STRING\n  host_filter => NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name, or null to match any resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The resource pattern to match.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal to match, or null to match any principal.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host to match, or null to match any host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation to match.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type to match.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n  resource_type_filter => INT8\n  resource_name_filter => COMPACT_NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => COMPACT_NULLABLE_STRING\n  host_filter => COMPACT_NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name, or null to match any resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The resource pattern to match.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal to match, or null to match any principal.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host to match, or null to match any host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation to match.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type to match.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n  resource_type_filter => INT8\n  resource_name_filter => COMPACT_NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => COMPACT_NULLABLE_STRING\n  host_filter => COMPACT_NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name, or null to match any resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The resource pattern to match.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal to match, or null to match any principal.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host to match, or null to match any host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation to match.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type to match.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "resource_type_filter resource_name_filter principal_filter host_filter operation permission_type \n  resource_type_filter => INT8\n  resource_name_filter => NULLABLE_STRING\n  principal_filter => NULLABLE_STRING\n  host_filter => NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resources",
              "documentation": "Each Resource that is referenced in an ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "acls",
              "documentation": "The ACLs.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type \n  resource_type_filter => INT8\n  resource_name_filter => NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => NULLABLE_STRING\n  host_filter => NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resources",
              "documentation": "Each Resource that is referenced in an ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "acls",
              "documentation": "The ACLs.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n  resource_type_filter => INT8\n  resource_name_filter => COMPACT_NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => COMPACT_NULLABLE_STRING\n  host_filter => COMPACT_NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resources",
              "documentation": "Each Resource that is referenced in an ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "acls",
              "documentation": "The ACLs.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n  resource_type_filter => INT8\n  resource_name_filter => COMPACT_NULLABLE_STRING\n  pattern_type_filter => INT8\n  principal_filter => COMPACT_NULLABLE_STRING\n  host_filter => COMPACT_NULLABLE_STRING\n  operation => INT8\n  permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resources",
              "documentation": "Each Resource that is referenced in an ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "acls",
              "documentation": "The ACLs.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 30,
      "name": "CreateAcls",
      "requests": [
        {
          "version": 0,
          "bnf": "[creations] \n  creations => resource_type resource_name principal host operation permission_type \n    resource_type => INT8\n    resource_name => STRING\n    principal => STRING\n    host => STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "creations",
              "documentation": "The ACLs that we want to create.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The type of the resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The principal for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation type for the ACL (read, write, etc.).",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type for the ACL (allow, deny, etc.).",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[creations] \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type \n    resource_type => INT8\n    resource_name => STRING\n    resource_pattern_type => INT8\n    principal => STRING\n    host => STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "creations",
              "documentation": "The ACLs that we want to create.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The type of the resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_pattern_type",
              "documentation": "The pattern type for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The principal for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation type for the ACL (read, write, etc.).",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type for the ACL (allow, deny, etc.).",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[creations] TAG_BUFFER \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    resource_pattern_type => INT8\n    principal => COMPACT_STRING\n    host => COMPACT_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "creations",
              "documentation": "The ACLs that we want to create.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The type of the resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_pattern_type",
              "documentation": "The pattern type for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The principal for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation type for the ACL (read, write, etc.).",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type for the ACL (allow, deny, etc.).",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[creations] TAG_BUFFER \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    resource_pattern_type => INT8\n    principal => COMPACT_STRING\n    host => COMPACT_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "creations",
              "documentation": "The ACLs that we want to create.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The type of the resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "resource_pattern_type",
              "documentation": "The pattern type for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The principal for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The host for the ACL.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The operation type for the ACL (read, write, etc.).",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type for the ACL (allow, deny, etc.).",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[creations] \n  creations => resource_type resource_name principal host operation permission_type \n    resource_type => INT8\n    resource_name => STRING\n    principal => STRING\n    host => STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each ACL creation.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[creations] \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type \n    resource_type => INT8\n    resource_name => STRING\n    resource_pattern_type => INT8\n    principal => STRING\n    host => STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each ACL creation.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[creations] TAG_BUFFER \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    resource_pattern_type => INT8\n    principal => COMPACT_STRING\n    host => COMPACT_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each ACL creation.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[creations] TAG_BUFFER \n  creations => resource_type resource_name resource_pattern_type principal host operation permission_type TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    resource_pattern_type => INT8\n    principal => COMPACT_STRING\n    host => COMPACT_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each ACL creation.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 31,
      "name": "DeleteAcls",
      "requests": [
        {
          "version": 0,
          "bnf": "[filters] \n  filters => resource_type_filter resource_name_filter principal_filter host_filter operation permission_type \n    resource_type_filter => INT8\n    resource_name_filter => NULLABLE_STRING\n    principal_filter => NULLABLE_STRING\n    host_filter => NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "filters",
              "documentation": "The filters to use when deleting ACLs.",
              "defaultValue": ""
            },
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal filter, or null to accept all principals.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host filter, or null to accept all hosts.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[filters] \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type \n    resource_type_filter => INT8\n    resource_name_filter => NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => NULLABLE_STRING\n    host_filter => NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "filters",
              "documentation": "The filters to use when deleting ACLs.",
              "defaultValue": ""
            },
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal filter, or null to accept all principals.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host filter, or null to accept all hosts.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[filters] TAG_BUFFER \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n    resource_type_filter => INT8\n    resource_name_filter => COMPACT_NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => COMPACT_NULLABLE_STRING\n    host_filter => COMPACT_NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "filters",
              "documentation": "The filters to use when deleting ACLs.",
              "defaultValue": ""
            },
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal filter, or null to accept all principals.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host filter, or null to accept all hosts.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[filters] TAG_BUFFER \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n    resource_type_filter => INT8\n    resource_name_filter => COMPACT_NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => COMPACT_NULLABLE_STRING\n    host_filter => COMPACT_NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "filters",
              "documentation": "The filters to use when deleting ACLs.",
              "defaultValue": ""
            },
            {
              "field": "resource_type_filter",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name_filter",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type_filter",
              "documentation": "The pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal_filter",
              "documentation": "The principal filter, or null to accept all principals.",
              "defaultValue": ""
            },
            {
              "field": "host_filter",
              "documentation": "The host filter, or null to accept all hosts.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[filters] \n  filters => resource_type_filter resource_name_filter principal_filter host_filter operation permission_type \n    resource_type_filter => INT8\n    resource_name_filter => NULLABLE_STRING\n    principal_filter => NULLABLE_STRING\n    host_filter => NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "filter_results",
              "documentation": "The results for each filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "matching_acls",
              "documentation": "The ACLs which matched this filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The deletion error message, or null if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The ACL resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The ACL resource name.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[filters] \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type \n    resource_type_filter => INT8\n    resource_name_filter => NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => NULLABLE_STRING\n    host_filter => NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "filter_results",
              "documentation": "The results for each filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "matching_acls",
              "documentation": "The ACLs which matched this filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The deletion error message, or null if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The ACL resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The ACL resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The ACL resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[filters] TAG_BUFFER \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n    resource_type_filter => INT8\n    resource_name_filter => COMPACT_NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => COMPACT_NULLABLE_STRING\n    host_filter => COMPACT_NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "filter_results",
              "documentation": "The results for each filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "matching_acls",
              "documentation": "The ACLs which matched this filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The deletion error message, or null if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The ACL resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The ACL resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The ACL resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[filters] TAG_BUFFER \n  filters => resource_type_filter resource_name_filter pattern_type_filter principal_filter host_filter operation permission_type TAG_BUFFER \n    resource_type_filter => INT8\n    resource_name_filter => COMPACT_NULLABLE_STRING\n    pattern_type_filter => INT8\n    principal_filter => COMPACT_NULLABLE_STRING\n    host_filter => COMPACT_NULLABLE_STRING\n    operation => INT8\n    permission_type => INT8\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "filter_results",
              "documentation": "The results for each filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if the filter succeeded.",
              "defaultValue": ""
            },
            {
              "field": "matching_acls",
              "documentation": "The ACLs which matched this filter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error code, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The deletion error message, or null if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The ACL resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The ACL resource name.",
              "defaultValue": ""
            },
            {
              "field": "pattern_type",
              "documentation": "The ACL resource pattern type.",
              "defaultValue": ""
            },
            {
              "field": "principal",
              "documentation": "The ACL principal.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The ACL host.",
              "defaultValue": ""
            },
            {
              "field": "operation",
              "documentation": "The ACL operation.",
              "defaultValue": ""
            },
            {
              "field": "permission_type",
              "documentation": "The ACL permission type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 32,
      "name": "DescribeConfigs",
      "requests": [
        {
          "version": 0,
          "bnf": "[resources] \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The resources whose configurations we want to describe.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configuration_keys",
              "documentation": "The configuration keys to list, or null to list all configuration keys.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] include_synonyms \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The resources whose configurations we want to describe.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configuration_keys",
              "documentation": "The configuration keys to list, or null to list all configuration keys.",
              "defaultValue": ""
            },
            {
              "field": "include_synonyms",
              "documentation": "True if we should include all synonyms.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[resources] include_synonyms \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The resources whose configurations we want to describe.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configuration_keys",
              "documentation": "The configuration keys to list, or null to list all configuration keys.",
              "defaultValue": ""
            },
            {
              "field": "include_synonyms",
              "documentation": "True if we should include all synonyms.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[resources] include_synonyms include_documentation \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n  include_documentation => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The resources whose configurations we want to describe.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configuration_keys",
              "documentation": "The configuration keys to list, or null to list all configuration keys.",
              "defaultValue": ""
            },
            {
              "field": "include_synonyms",
              "documentation": "True if we should include all synonyms.",
              "defaultValue": ""
            },
            {
              "field": "include_documentation",
              "documentation": "True if we should include configuration documentation.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[resources] include_synonyms include_documentation TAG_BUFFER \n  resources => resource_type resource_name [configuration_keys] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configuration_keys => COMPACT_STRING\n  include_synonyms => BOOLEAN\n  include_documentation => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The resources whose configurations we want to describe.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configuration_keys",
              "documentation": "The configuration keys to list, or null to list all configuration keys.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "include_synonyms",
              "documentation": "True if we should include all synonyms.",
              "defaultValue": ""
            },
            {
              "field": "include_documentation",
              "documentation": "True if we should include configuration documentation.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[resources] \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Each listed configuration.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "is_default",
              "documentation": "True if the configuration is not set.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] include_synonyms \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Each listed configuration.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "synonyms",
              "documentation": "The synonyms for this configuration key.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The synonym name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The synonym value.",
              "defaultValue": ""
            },
            {
              "field": "source",
              "documentation": "The synonym source.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[resources] include_synonyms \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Each listed configuration.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "synonyms",
              "documentation": "The synonyms for this configuration key.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The synonym name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The synonym value.",
              "defaultValue": ""
            },
            {
              "field": "source",
              "documentation": "The synonym source.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[resources] include_synonyms include_documentation \n  resources => resource_type resource_name [configuration_keys] \n    resource_type => INT8\n    resource_name => STRING\n    configuration_keys => STRING\n  include_synonyms => BOOLEAN\n  include_documentation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Each listed configuration.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "synonyms",
              "documentation": "The synonyms for this configuration key.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The synonym name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The synonym value.",
              "defaultValue": ""
            },
            {
              "field": "source",
              "documentation": "The synonym source.",
              "defaultValue": ""
            },
            {
              "field": "config_type",
              "documentation": "The configuration data type. Type can be one of the following values - BOOLEAN, STRING, INT, SHORT, LONG, DOUBLE, LIST, CLASS, PASSWORD",
              "defaultValue": ""
            },
            {
              "field": "documentation",
              "documentation": "The configuration documentation.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[resources] include_synonyms include_documentation TAG_BUFFER \n  resources => resource_type resource_name [configuration_keys] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configuration_keys => COMPACT_STRING\n  include_synonyms => BOOLEAN\n  include_documentation => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if we were able to successfully describe the configurations.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "Each listed configuration.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The configuration value.",
              "defaultValue": ""
            },
            {
              "field": "read_only",
              "documentation": "True if the configuration is read-only.",
              "defaultValue": ""
            },
            {
              "field": "config_source",
              "documentation": "The configuration source.",
              "defaultValue": ""
            },
            {
              "field": "is_sensitive",
              "documentation": "True if this configuration is sensitive.",
              "defaultValue": ""
            },
            {
              "field": "synonyms",
              "documentation": "The synonyms for this configuration key.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The synonym name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The synonym value.",
              "defaultValue": ""
            },
            {
              "field": "source",
              "documentation": "The synonym source.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "config_type",
              "documentation": "The configuration data type. Type can be one of the following values - BOOLEAN, STRING, INT, SHORT, LONG, DOUBLE, LIST, CLASS, PASSWORD",
              "defaultValue": ""
            },
            {
              "field": "documentation",
              "documentation": "The configuration documentation.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 33,
      "name": "AlterConfigs",
      "requests": [
        {
          "version": 0,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The updates for each resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The configurations.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration key name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set for the configuration key.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not change the configurations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The updates for each resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The configurations.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration key name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set for the configuration key.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not change the configurations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[resources] validate_only TAG_BUFFER \n  resources => resource_type resource_name [configs] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The updates for each resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The configurations.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration key name.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set for the configuration key.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not change the configurations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The resource error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The resource error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name value \n      name => STRING\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The resource error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The resource error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[resources] validate_only TAG_BUFFER \n  resources => resource_type resource_name [configs] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configs => name value TAG_BUFFER \n      name => COMPACT_STRING\n      value => COMPACT_NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The resource error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The resource error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 34,
      "name": "AlterReplicaLogDirs",
      "requests": [
        {
          "version": 0,
          "bnf": "[dirs] \n  dirs => path [topics] \n    path => STRING\n    topics => name [partitions] \n      name => STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "dirs",
              "documentation": "The alterations to make for each directory.",
              "defaultValue": ""
            },
            {
              "field": "path",
              "documentation": "The absolute directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to add to the directory.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[dirs] \n  dirs => path [topics] \n    path => STRING\n    topics => name [partitions] \n      name => STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "dirs",
              "documentation": "The alterations to make for each directory.",
              "defaultValue": ""
            },
            {
              "field": "path",
              "documentation": "The absolute directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to add to the directory.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[dirs] TAG_BUFFER \n  dirs => path [topics] TAG_BUFFER \n    path => COMPACT_STRING\n    topics => name [partitions] TAG_BUFFER \n      name => COMPACT_STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "dirs",
              "documentation": "The alterations to make for each directory.",
              "defaultValue": ""
            },
            {
              "field": "path",
              "documentation": "The absolute directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to add to the directory.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[dirs] \n  dirs => path [topics] \n    path => STRING\n    topics => name [partitions] \n      name => STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The results for each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[dirs] \n  dirs => path [topics] \n    path => STRING\n    topics => name [partitions] \n      name => STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The results for each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[dirs] TAG_BUFFER \n  dirs => path [topics] TAG_BUFFER \n    path => COMPACT_STRING\n    topics => name [partitions] TAG_BUFFER \n      name => COMPACT_STRING\n      partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The results for each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 35,
      "name": "DescribeLogDirs",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to describe log directories for, or null for all topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to describe log directories for, or null for all topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to describe log directories for, or null for all topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to describe log directories for, or null for all topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to describe log directories for, or null for all topics.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partition indexes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The log directories.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "log_dir",
              "documentation": "The absolute log directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "partition_size",
              "documentation": "The size of the log segments in this partition in bytes.",
              "defaultValue": ""
            },
            {
              "field": "offset_lag",
              "documentation": "The lag of the log's LEO w.r.t. partition's HW (if it is the current log for the partition) or current replica's LEO (if it is the future log for the partition)",
              "defaultValue": ""
            },
            {
              "field": "is_future_key",
              "documentation": "True if this log is created by AlterReplicaLogDirsRequest and will replace the current log of the replica in the future.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] \n  topics => topic [partitions] \n    topic => STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The log directories.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "log_dir",
              "documentation": "The absolute log directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "partition_size",
              "documentation": "The size of the log segments in this partition in bytes.",
              "defaultValue": ""
            },
            {
              "field": "offset_lag",
              "documentation": "The lag of the log's LEO w.r.t. partition's HW (if it is the current log for the partition) or current replica's LEO (if it is the future log for the partition)",
              "defaultValue": ""
            },
            {
              "field": "is_future_key",
              "documentation": "True if this log is created by AlterReplicaLogDirsRequest and will replace the current log of the replica in the future.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The log directories.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "log_dir",
              "documentation": "The absolute log directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "partition_size",
              "documentation": "The size of the log segments in this partition in bytes.",
              "defaultValue": ""
            },
            {
              "field": "offset_lag",
              "documentation": "The lag of the log's LEO w.r.t. partition's HW (if it is the current log for the partition) or current replica's LEO (if it is the future log for the partition)",
              "defaultValue": ""
            },
            {
              "field": "is_future_key",
              "documentation": "True if this log is created by AlterReplicaLogDirsRequest and will replace the current log of the replica in the future.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The log directories.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "log_dir",
              "documentation": "The absolute log directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "partition_size",
              "documentation": "The size of the log segments in this partition in bytes.",
              "defaultValue": ""
            },
            {
              "field": "offset_lag",
              "documentation": "The lag of the log's LEO w.r.t. partition's HW (if it is the current log for the partition) or current replica's LEO (if it is the future log for the partition)",
              "defaultValue": ""
            },
            {
              "field": "is_future_key",
              "documentation": "True if this log is created by AlterReplicaLogDirsRequest and will replace the current log of the replica in the future.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 4,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The log directories.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "log_dir",
              "documentation": "The absolute log directory path.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "partition_size",
              "documentation": "The size of the log segments in this partition in bytes.",
              "defaultValue": ""
            },
            {
              "field": "offset_lag",
              "documentation": "The lag of the log's LEO w.r.t. partition's HW (if it is the current log for the partition) or current replica's LEO (if it is the future log for the partition)",
              "defaultValue": ""
            },
            {
              "field": "is_future_key",
              "documentation": "True if this log is created by AlterReplicaLogDirsRequest and will replace the current log of the replica in the future.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "total_bytes",
              "documentation": "The total size in bytes of the volume the log directory is in.",
              "defaultValue": ""
            },
            {
              "field": "usable_bytes",
              "documentation": "The usable size in bytes of the volume the log directory is in.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 36,
      "name": "SaslAuthenticate",
      "requests": [
        {
          "version": 0,
          "bnf": "auth_bytes \n  auth_bytes => BYTES\n",
          "fields": [
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the client, as defined by the SASL mechanism.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "auth_bytes \n  auth_bytes => BYTES\n",
          "fields": [
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the client, as defined by the SASL mechanism.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "auth_bytes TAG_BUFFER \n  auth_bytes => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the client, as defined by the SASL mechanism.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "auth_bytes \n  auth_bytes => BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the server, as defined by the SASL mechanism.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "auth_bytes \n  auth_bytes => BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the server, as defined by the SASL mechanism.",
              "defaultValue": ""
            },
            {
              "field": "session_lifetime_ms",
              "documentation": "The SASL authentication bytes from the server, as defined by the SASL mechanism.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "auth_bytes TAG_BUFFER \n  auth_bytes => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "auth_bytes",
              "documentation": "The SASL authentication bytes from the server, as defined by the SASL mechanism.",
              "defaultValue": ""
            },
            {
              "field": "session_lifetime_ms",
              "documentation": "The SASL authentication bytes from the server, as defined by the SASL mechanism.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 37,
      "name": "CreatePartitions",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name count [assignments] \n    name => STRING\n    count => INT32\n    assignments => [broker_ids] \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to create new partitions inside.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "count",
              "documentation": "The new partition count.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The new partition assignments.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The assigned broker IDs.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the partitions to be created.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, then validate the request, but don't actually increase the number of partitions.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name count [assignments] \n    name => STRING\n    count => INT32\n    assignments => [broker_ids] \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to create new partitions inside.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "count",
              "documentation": "The new partition count.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The new partition assignments.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The assigned broker IDs.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the partitions to be created.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, then validate the request, but don't actually increase the number of partitions.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name count [assignments] TAG_BUFFER \n    name => COMPACT_STRING\n    count => INT32\n    assignments => [broker_ids] TAG_BUFFER \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to create new partitions inside.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "count",
              "documentation": "The new partition count.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The new partition assignments.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The assigned broker IDs.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the partitions to be created.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, then validate the request, but don't actually increase the number of partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name count [assignments] TAG_BUFFER \n    name => COMPACT_STRING\n    count => INT32\n    assignments => [broker_ids] TAG_BUFFER \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "Each topic that we want to create new partitions inside.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "count",
              "documentation": "The new partition count.",
              "defaultValue": ""
            },
            {
              "field": "assignments",
              "documentation": "The new partition assignments.",
              "defaultValue": ""
            },
            {
              "field": "broker_ids",
              "documentation": "The assigned broker IDs.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the partitions to be created.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "If true, then validate the request, but don't actually increase the number of partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name count [assignments] \n    name => STRING\n    count => INT32\n    assignments => [broker_ids] \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The partition creation results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] timeout_ms validate_only \n  topics => name count [assignments] \n    name => STRING\n    count => INT32\n    assignments => [broker_ids] \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The partition creation results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name count [assignments] TAG_BUFFER \n    name => COMPACT_STRING\n    count => INT32\n    assignments => [broker_ids] TAG_BUFFER \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The partition creation results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[topics] timeout_ms validate_only TAG_BUFFER \n  topics => name count [assignments] TAG_BUFFER \n    name => COMPACT_STRING\n    count => INT32\n    assignments => [broker_ids] TAG_BUFFER \n      broker_ids => INT32\n  timeout_ms => INT32\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The partition creation results for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 38,
      "name": "CreateDelegationToken",
      "requests": [
        {
          "version": 0,
          "bnf": "[renewers] max_lifetime_ms \n  renewers => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "renewers",
              "documentation": "A list of those who are allowed to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The type of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "max_lifetime_ms",
              "documentation": "The maximum lifetime of the token in milliseconds, or -1 to use the server side default.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[renewers] max_lifetime_ms \n  renewers => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "renewers",
              "documentation": "A list of those who are allowed to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The type of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "max_lifetime_ms",
              "documentation": "The maximum lifetime of the token in milliseconds, or -1 to use the server side default.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[renewers] max_lifetime_ms TAG_BUFFER \n  renewers => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "renewers",
              "documentation": "A list of those who are allowed to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The type of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "max_lifetime_ms",
              "documentation": "The maximum lifetime of the token in milliseconds, or -1 to use the server side default.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "owner_principal_type owner_principal_name [renewers] max_lifetime_ms TAG_BUFFER \n  owner_principal_type => COMPACT_NULLABLE_STRING\n  owner_principal_name => COMPACT_NULLABLE_STRING\n  renewers => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "owner_principal_type",
              "documentation": "The principal type of the owner of the token. If it's null it defaults to the token request principal.",
              "defaultValue": ""
            },
            {
              "field": "owner_principal_name",
              "documentation": "The principal name of the owner of the token. If it's null it defaults to the token request principal.",
              "defaultValue": ""
            },
            {
              "field": "renewers",
              "documentation": "A list of those who are allowed to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The type of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the Kafka principal.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "max_lifetime_ms",
              "documentation": "The maximum lifetime of the token in milliseconds, or -1 to use the server side default.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[renewers] max_lifetime_ms \n  renewers => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The principal type of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp_ms",
              "documentation": "When this token was generated.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "When this token expires.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp_ms",
              "documentation": "The maximum lifetime of this token.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token UUID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "HMAC of the delegation token.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[renewers] max_lifetime_ms \n  renewers => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The principal type of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp_ms",
              "documentation": "When this token was generated.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "When this token expires.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp_ms",
              "documentation": "The maximum lifetime of this token.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token UUID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "HMAC of the delegation token.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[renewers] max_lifetime_ms TAG_BUFFER \n  renewers => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The principal type of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp_ms",
              "documentation": "When this token was generated.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "When this token expires.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp_ms",
              "documentation": "The maximum lifetime of this token.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token UUID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "HMAC of the delegation token.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "owner_principal_type owner_principal_name [renewers] max_lifetime_ms TAG_BUFFER \n  owner_principal_type => COMPACT_NULLABLE_STRING\n  owner_principal_name => COMPACT_NULLABLE_STRING\n  renewers => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n  max_lifetime_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The principal type of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The name of the token owner.",
              "defaultValue": ""
            },
            {
              "field": "token_requester_principal_type",
              "documentation": "The principal type of the requester of the token.",
              "defaultValue": ""
            },
            {
              "field": "token_requester_principal_name",
              "documentation": "The principal type of the requester of the token.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp_ms",
              "documentation": "When this token was generated.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "When this token expires.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp_ms",
              "documentation": "The maximum lifetime of this token.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token UUID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "HMAC of the delegation token.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 39,
      "name": "RenewDelegationToken",
      "requests": [
        {
          "version": 0,
          "bnf": "hmac renew_period_ms \n  hmac => BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be renewed.",
              "defaultValue": ""
            },
            {
              "field": "renew_period_ms",
              "documentation": "The renewal time period in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "hmac renew_period_ms \n  hmac => BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be renewed.",
              "defaultValue": ""
            },
            {
              "field": "renew_period_ms",
              "documentation": "The renewal time period in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "hmac renew_period_ms TAG_BUFFER \n  hmac => COMPACT_BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be renewed.",
              "defaultValue": ""
            },
            {
              "field": "renew_period_ms",
              "documentation": "The renewal time period in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "hmac renew_period_ms \n  hmac => BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "hmac renew_period_ms \n  hmac => BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "hmac renew_period_ms TAG_BUFFER \n  hmac => COMPACT_BYTES\n  renew_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 40,
      "name": "ExpireDelegationToken",
      "requests": [
        {
          "version": 0,
          "bnf": "hmac expiry_time_period_ms \n  hmac => BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be expired.",
              "defaultValue": ""
            },
            {
              "field": "expiry_time_period_ms",
              "documentation": "The expiry time period in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "hmac expiry_time_period_ms \n  hmac => BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be expired.",
              "defaultValue": ""
            },
            {
              "field": "expiry_time_period_ms",
              "documentation": "The expiry time period in milliseconds.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "hmac expiry_time_period_ms TAG_BUFFER \n  hmac => COMPACT_BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "hmac",
              "documentation": "The HMAC of the delegation token to be expired.",
              "defaultValue": ""
            },
            {
              "field": "expiry_time_period_ms",
              "documentation": "The expiry time period in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "hmac expiry_time_period_ms \n  hmac => BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "hmac expiry_time_period_ms \n  hmac => BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "hmac expiry_time_period_ms TAG_BUFFER \n  hmac => COMPACT_BYTES\n  expiry_time_period_ms => INT64\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp_ms",
              "documentation": "The timestamp in milliseconds at which this token expires.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 41,
      "name": "DescribeDelegationToken",
      "requests": [
        {
          "version": 0,
          "bnf": "[owners] \n  owners => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n",
          "fields": [
            {
              "field": "owners",
              "documentation": "Each owner that we want to describe delegation tokens for, or null to describe all tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The owner principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The owner principal name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[owners] \n  owners => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n",
          "fields": [
            {
              "field": "owners",
              "documentation": "Each owner that we want to describe delegation tokens for, or null to describe all tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The owner principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The owner principal name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[owners] TAG_BUFFER \n  owners => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "owners",
              "documentation": "Each owner that we want to describe delegation tokens for, or null to describe all tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The owner principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The owner principal name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[owners] TAG_BUFFER \n  owners => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "owners",
              "documentation": "Each owner that we want to describe delegation tokens for, or null to describe all tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The owner principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The owner principal name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[owners] \n  owners => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "tokens",
              "documentation": "The tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The token principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The token principal name.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp",
              "documentation": "The token issue timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp",
              "documentation": "The token expiry timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp",
              "documentation": "The token maximum timestamp length in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token ID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "The token HMAC.",
              "defaultValue": ""
            },
            {
              "field": "renewers",
              "documentation": "Those who are able to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The renewer principal type",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The renewer principal name",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[owners] \n  owners => principal_type principal_name \n    principal_type => STRING\n    principal_name => STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "tokens",
              "documentation": "The tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The token principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The token principal name.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp",
              "documentation": "The token issue timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp",
              "documentation": "The token expiry timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp",
              "documentation": "The token maximum timestamp length in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token ID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "The token HMAC.",
              "defaultValue": ""
            },
            {
              "field": "renewers",
              "documentation": "Those who are able to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The renewer principal type",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The renewer principal name",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[owners] TAG_BUFFER \n  owners => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "tokens",
              "documentation": "The tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The token principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The token principal name.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp",
              "documentation": "The token issue timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp",
              "documentation": "The token expiry timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp",
              "documentation": "The token maximum timestamp length in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token ID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "The token HMAC.",
              "defaultValue": ""
            },
            {
              "field": "renewers",
              "documentation": "Those who are able to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The renewer principal type",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The renewer principal name",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 3,
          "bnf": "[owners] TAG_BUFFER \n  owners => principal_type principal_name TAG_BUFFER \n    principal_type => COMPACT_STRING\n    principal_name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "tokens",
              "documentation": "The tokens.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The token principal type.",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The token principal name.",
              "defaultValue": ""
            },
            {
              "field": "token_requester_principal_type",
              "documentation": "The principal type of the requester of the token.",
              "defaultValue": ""
            },
            {
              "field": "token_requester_principal_name",
              "documentation": "The principal type of the requester of the token.",
              "defaultValue": ""
            },
            {
              "field": "issue_timestamp",
              "documentation": "The token issue timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "expiry_timestamp",
              "documentation": "The token expiry timestamp in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "max_timestamp",
              "documentation": "The token maximum timestamp length in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "token_id",
              "documentation": "The token ID.",
              "defaultValue": ""
            },
            {
              "field": "hmac",
              "documentation": "The token HMAC.",
              "defaultValue": ""
            },
            {
              "field": "renewers",
              "documentation": "Those who are able to renew this token before it expires.",
              "defaultValue": ""
            },
            {
              "field": "principal_type",
              "documentation": "The renewer principal type",
              "defaultValue": ""
            },
            {
              "field": "principal_name",
              "documentation": "The renewer principal name",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 42,
      "name": "DeleteGroups",
      "requests": [
        {
          "version": 0,
          "bnf": "[groups_names] \n  groups_names => STRING\n",
          "fields": [
            {
              "field": "groups_names",
              "documentation": "The group names to delete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[groups_names] \n  groups_names => STRING\n",
          "fields": [
            {
              "field": "groups_names",
              "documentation": "The group names to delete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[groups_names] TAG_BUFFER \n  groups_names => COMPACT_STRING\n",
          "fields": [
            {
              "field": "groups_names",
              "documentation": "The group names to delete.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[groups_names] \n  groups_names => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The deletion results",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[groups_names] \n  groups_names => STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The deletion results",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "[groups_names] TAG_BUFFER \n  groups_names => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The deletion results",
              "defaultValue": ""
            },
            {
              "field": "group_id",
              "documentation": "The group id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The deletion error, or 0 if the deletion succeeded.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 43,
      "name": "ElectLeaders",
      "requests": [
        {
          "version": 0,
          "bnf": "[topic_partitions] timeout_ms \n  topic_partitions => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "topic_partitions",
              "documentation": "The topic partitions to elect leaders.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of a topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions of this topic whose leader should be elected.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the election to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "election_type [topic_partitions] timeout_ms \n  election_type => INT8\n  topic_partitions => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "election_type",
              "documentation": "Type of elections to conduct for the partition. A value of '0' elects the preferred replica. A value of '1' elects the first live replica if there are no in-sync replica.",
              "defaultValue": ""
            },
            {
              "field": "topic_partitions",
              "documentation": "The topic partitions to elect leaders.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of a topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions of this topic whose leader should be elected.",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the election to complete.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "election_type [topic_partitions] timeout_ms TAG_BUFFER \n  election_type => INT8\n  topic_partitions => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "election_type",
              "documentation": "Type of elections to conduct for the partition. A value of '0' elects the preferred replica. A value of '1' elects the first live replica if there are no in-sync replica.",
              "defaultValue": ""
            },
            {
              "field": "topic_partitions",
              "documentation": "The topic partitions to elect leaders.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The name of a topic.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions of this topic whose leader should be elected.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the election to complete.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topic_partitions] timeout_ms \n  topic_partitions => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "replica_election_results",
              "documentation": "The election results, or an empty array if the requester did not have permission and the request asks for all partitions.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_result",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_id",
              "documentation": "The partition id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "election_type [topic_partitions] timeout_ms \n  election_type => INT8\n  topic_partitions => topic [partitions] \n    topic => STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "replica_election_results",
              "documentation": "The election results, or an empty array if the requester did not have permission and the request asks for all partitions.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_result",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_id",
              "documentation": "The partition id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "election_type [topic_partitions] timeout_ms TAG_BUFFER \n  election_type => INT8\n  topic_partitions => topic [partitions] TAG_BUFFER \n    topic => COMPACT_STRING\n    partitions => INT32\n  timeout_ms => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code.",
              "defaultValue": ""
            },
            {
              "field": "replica_election_results",
              "documentation": "The election results, or an empty array if the requester did not have permission and the request asks for all partitions.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_result",
              "documentation": "The results for each partition",
              "defaultValue": ""
            },
            {
              "field": "partition_id",
              "documentation": "The partition id",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The result error, or zero if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The result message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 44,
      "name": "IncrementalAlterConfigs",
      "requests": [
        {
          "version": 0,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name config_operation value \n      name => STRING\n      config_operation => INT8\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The incremental updates for each resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The configurations.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration key name.",
              "defaultValue": ""
            },
            {
              "field": "config_operation",
              "documentation": "The type (Set, Delete, Append, Subtract) of operation.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set for the configuration key.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not change the configurations.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] validate_only TAG_BUFFER \n  resources => resource_type resource_name [configs] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configs => name config_operation value TAG_BUFFER \n      name => COMPACT_STRING\n      config_operation => INT8\n      value => COMPACT_NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "resources",
              "documentation": "The incremental updates for each resource.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "configs",
              "documentation": "The configurations.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The configuration key name.",
              "defaultValue": ""
            },
            {
              "field": "config_operation",
              "documentation": "The type (Set, Delete, Append, Subtract) of operation.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set for the configuration key.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not change the configurations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[resources] validate_only \n  resources => resource_type resource_name [configs] \n    resource_type => INT8\n    resource_name => STRING\n    configs => name config_operation value \n      name => STRING\n      config_operation => INT8\n      value => NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The resource error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The resource error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[resources] validate_only TAG_BUFFER \n  resources => resource_type resource_name [configs] TAG_BUFFER \n    resource_type => INT8\n    resource_name => COMPACT_STRING\n    configs => name config_operation value TAG_BUFFER \n      name => COMPACT_STRING\n      config_operation => INT8\n      value => COMPACT_NULLABLE_STRING\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses for each resource.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The resource error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The resource error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "resource_type",
              "documentation": "The resource type.",
              "defaultValue": ""
            },
            {
              "field": "resource_name",
              "documentation": "The resource name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 45,
      "name": "AlterPartitionReassignments",
      "requests": [
        {
          "version": 0,
          "bnf": "timeout_ms [topics] TAG_BUFFER \n  timeout_ms => INT32\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index [replicas] TAG_BUFFER \n      partition_index => INT32\n      replicas => INT32\n",
          "fields": [
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the request to complete.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to reassign.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions to reassign.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The replicas to place the partitions on, or null to cancel a pending reassignment for this partition.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "timeout_ms [topics] TAG_BUFFER \n  timeout_ms => INT32\n  topics => name [partitions] TAG_BUFFER \n    name => COMPACT_STRING\n    partitions => partition_index [replicas] TAG_BUFFER \n      partition_index => INT32\n      replicas => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "responses",
              "documentation": "The responses to topics to reassign.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses to partitions to reassign",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code for this partition, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message for this partition, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 46,
      "name": "ListPartitionReassignments",
      "requests": [
        {
          "version": 0,
          "bnf": "timeout_ms [topics] TAG_BUFFER \n  timeout_ms => INT32\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "timeout_ms",
              "documentation": "The time in ms to wait for the request to complete.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to list partition reassignments for, or null to list everything.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The partitions to list partition reassignments for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "timeout_ms [topics] TAG_BUFFER \n  timeout_ms => INT32\n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The ongoing reassignments for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The ongoing reassignments for each partition.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The index of the partition.",
              "defaultValue": ""
            },
            {
              "field": "replicas",
              "documentation": "The current replica set.",
              "defaultValue": ""
            },
            {
              "field": "adding_replicas",
              "documentation": "The set of replicas we are currently adding.",
              "defaultValue": ""
            },
            {
              "field": "removing_replicas",
              "documentation": "The set of replicas we are currently removing.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 47,
      "name": "OffsetDelete",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The unique group identifier.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The topics to delete offsets for",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition to delete offsets for.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id [topics] \n  group_id => STRING\n  topics => name [partitions] \n    name => STRING\n    partitions => partition_index \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The responses for each topic.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The responses for each partition in the topic.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 48,
      "name": "DescribeClientQuotas",
      "requests": [
        {
          "version": 0,
          "bnf": "[components] strict \n  components => entity_type match_type match \n    entity_type => STRING\n    match_type => INT8\n    match => NULLABLE_STRING\n  strict => BOOLEAN\n",
          "fields": [
            {
              "field": "components",
              "documentation": "Filter components to apply to quota entities.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type that the filter component applies to.",
              "defaultValue": ""
            },
            {
              "field": "match_type",
              "documentation": "How to match the entity {0 = exact name, 1 = default name, 2 = any specified name}.",
              "defaultValue": ""
            },
            {
              "field": "match",
              "documentation": "The string to match against, or null if unused for the match type.",
              "defaultValue": ""
            },
            {
              "field": "strict",
              "documentation": "Whether the match is strict, i.e. should exclude entities with unspecified entity types.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[components] strict TAG_BUFFER \n  components => entity_type match_type match TAG_BUFFER \n    entity_type => COMPACT_STRING\n    match_type => INT8\n    match => COMPACT_NULLABLE_STRING\n  strict => BOOLEAN\n",
          "fields": [
            {
              "field": "components",
              "documentation": "Filter components to apply to quota entities.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type that the filter component applies to.",
              "defaultValue": ""
            },
            {
              "field": "match_type",
              "documentation": "How to match the entity {0 = exact name, 1 = default name, 2 = any specified name}.",
              "defaultValue": ""
            },
            {
              "field": "match",
              "documentation": "The string to match against, or null if unused for the match type.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "strict",
              "documentation": "Whether the match is strict, i.e. should exclude entities with unspecified entity types.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[components] strict \n  components => entity_type match_type match \n    entity_type => STRING\n    match_type => INT8\n    match => NULLABLE_STRING\n  strict => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or `0` if the quota description succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or `null` if the quota description succeeded.",
              "defaultValue": ""
            },
            {
              "field": "entries",
              "documentation": "A result entry.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity description.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The entity name, or null if the default.",
              "defaultValue": ""
            },
            {
              "field": "values",
              "documentation": "The quota values for the entity.",
              "defaultValue": ""
            },
            {
              "field": "key",
              "documentation": "The quota configuration key.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The quota configuration value.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[components] strict TAG_BUFFER \n  components => entity_type match_type match TAG_BUFFER \n    entity_type => COMPACT_STRING\n    match_type => INT8\n    match => COMPACT_NULLABLE_STRING\n  strict => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or `0` if the quota description succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or `null` if the quota description succeeded.",
              "defaultValue": ""
            },
            {
              "field": "entries",
              "documentation": "A result entry.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity description.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The entity name, or null if the default.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "values",
              "documentation": "The quota values for the entity.",
              "defaultValue": ""
            },
            {
              "field": "key",
              "documentation": "The quota configuration key.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The quota configuration value.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 49,
      "name": "AlterClientQuotas",
      "requests": [
        {
          "version": 0,
          "bnf": "[entries] validate_only \n  entries => [entity] [ops] \n    entity => entity_type entity_name \n      entity_type => STRING\n      entity_name => NULLABLE_STRING\n    ops => key value remove \n      key => STRING\n      value => FLOAT64\n      remove => BOOLEAN\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "entries",
              "documentation": "The quota configuration entries to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The name of the entity, or null if the default.",
              "defaultValue": ""
            },
            {
              "field": "ops",
              "documentation": "An individual quota configuration entry to alter.",
              "defaultValue": ""
            },
            {
              "field": "key",
              "documentation": "The quota configuration key.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set, otherwise ignored if the value is to be removed.",
              "defaultValue": ""
            },
            {
              "field": "remove",
              "documentation": "Whether the quota configuration value should be removed, otherwise set.",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "Whether the alteration should be validated, but not performed.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[entries] validate_only TAG_BUFFER \n  entries => [entity] [ops] TAG_BUFFER \n    entity => entity_type entity_name TAG_BUFFER \n      entity_type => COMPACT_STRING\n      entity_name => COMPACT_NULLABLE_STRING\n    ops => key value remove TAG_BUFFER \n      key => COMPACT_STRING\n      value => FLOAT64\n      remove => BOOLEAN\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "entries",
              "documentation": "The quota configuration entries to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The name of the entity, or null if the default.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "ops",
              "documentation": "An individual quota configuration entry to alter.",
              "defaultValue": ""
            },
            {
              "field": "key",
              "documentation": "The quota configuration key.",
              "defaultValue": ""
            },
            {
              "field": "value",
              "documentation": "The value to set, otherwise ignored if the value is to be removed.",
              "defaultValue": ""
            },
            {
              "field": "remove",
              "documentation": "Whether the quota configuration value should be removed, otherwise set.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "Whether the alteration should be validated, but not performed.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[entries] validate_only \n  entries => [entity] [ops] \n    entity => entity_type entity_name \n      entity_type => STRING\n      entity_name => NULLABLE_STRING\n    ops => key value remove \n      key => STRING\n      value => FLOAT64\n      remove => BOOLEAN\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "entries",
              "documentation": "The quota configuration entries to alter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or `0` if the quota alteration succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or `null` if the quota alteration succeeded.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The name of the entity, or null if the default.",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[entries] validate_only TAG_BUFFER \n  entries => [entity] [ops] TAG_BUFFER \n    entity => entity_type entity_name TAG_BUFFER \n      entity_type => COMPACT_STRING\n      entity_name => COMPACT_NULLABLE_STRING\n    ops => key value remove TAG_BUFFER \n      key => COMPACT_STRING\n      value => FLOAT64\n      remove => BOOLEAN\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "entries",
              "documentation": "The quota configuration entries to alter.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or `0` if the quota alteration succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, or `null` if the quota alteration succeeded.",
              "defaultValue": ""
            },
            {
              "field": "entity",
              "documentation": "The quota entity to alter.",
              "defaultValue": ""
            },
            {
              "field": "entity_type",
              "documentation": "The entity type.",
              "defaultValue": ""
            },
            {
              "field": "entity_name",
              "documentation": "The name of the entity, or null if the default.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 50,
      "name": "DescribeUserScramCredentials",
      "requests": [
        {
          "version": 0,
          "bnf": "[users] TAG_BUFFER \n  users => name TAG_BUFFER \n    name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "users",
              "documentation": "The users to describe, or null/empty to describe all users.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The user name.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[users] TAG_BUFFER \n  users => name TAG_BUFFER \n    name => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The message-level error code, 0 except for user authorization or infrastructure issues.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The message-level error message, if any.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for descriptions, one per user.",
              "defaultValue": ""
            },
            {
              "field": "user",
              "documentation": "The user name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The user-level error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The user-level error message, if any.",
              "defaultValue": ""
            },
            {
              "field": "credential_infos",
              "documentation": "The mechanism and related information associated with the user's SCRAM credentials.",
              "defaultValue": ""
            },
            {
              "field": "mechanism",
              "documentation": "The SCRAM mechanism.",
              "defaultValue": ""
            },
            {
              "field": "iterations",
              "documentation": "The number of iterations used in the SCRAM credential.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 51,
      "name": "AlterUserScramCredentials",
      "requests": [
        {
          "version": 0,
          "bnf": "[deletions] [upsertions] TAG_BUFFER \n  deletions => name mechanism TAG_BUFFER \n    name => COMPACT_STRING\n    mechanism => INT8\n  upsertions => name mechanism iterations salt salted_password TAG_BUFFER \n    name => COMPACT_STRING\n    mechanism => INT8\n    iterations => INT32\n    salt => COMPACT_BYTES\n    salted_password => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "deletions",
              "documentation": "The SCRAM credentials to remove.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The user name.",
              "defaultValue": ""
            },
            {
              "field": "mechanism",
              "documentation": "The SCRAM mechanism.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "upsertions",
              "documentation": "The SCRAM credentials to update/insert.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The user name.",
              "defaultValue": ""
            },
            {
              "field": "mechanism",
              "documentation": "The SCRAM mechanism.",
              "defaultValue": ""
            },
            {
              "field": "iterations",
              "documentation": "The number of iterations.",
              "defaultValue": ""
            },
            {
              "field": "salt",
              "documentation": "A random salt generated by the client.",
              "defaultValue": ""
            },
            {
              "field": "salted_password",
              "documentation": "The salted password.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[deletions] [upsertions] TAG_BUFFER \n  deletions => name mechanism TAG_BUFFER \n    name => COMPACT_STRING\n    mechanism => INT8\n  upsertions => name mechanism iterations salt salted_password TAG_BUFFER \n    name => COMPACT_STRING\n    mechanism => INT8\n    iterations => INT32\n    salt => COMPACT_BYTES\n    salted_password => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "The results for deletions and alterations, one per affected user.",
              "defaultValue": ""
            },
            {
              "field": "user",
              "documentation": "The user name.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The error message, if any.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 55,
      "name": "DescribeQuorum",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index TAG_BUFFER \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index TAG_BUFFER \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index TAG_BUFFER \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top level error code.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the current leader or -1 if the leader is unknown.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The latest known leader epoch",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "current_voters",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "replica_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "log_end_offset",
              "documentation": "The last known log end offset of the follower or -1 if it is unknown",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "observers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "[topics] TAG_BUFFER \n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index TAG_BUFFER \n      partition_index => INT32\n",
          "fields": [
            {
              "field": "error_code",
              "documentation": "The top level error code.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The ID of the current leader or -1 if the leader is unknown.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The latest known leader epoch",
              "defaultValue": ""
            },
            {
              "field": "high_watermark",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "current_voters",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "replica_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "log_end_offset",
              "documentation": "The last known log end offset of the follower or -1 if it is unknown",
              "defaultValue": ""
            },
            {
              "field": "last_fetch_timestamp",
              "documentation": "The last known leader wall clock time time when a follower fetched from the leader. This is reported as -1 both for the current leader or if it is unknown for a voter",
              "defaultValue": ""
            },
            {
              "field": "last_caught_up_timestamp",
              "documentation": "The leader wall clock append time of the offset for which the follower made the most recent fetch request. This is reported as the current time for the leader and -1 if unknown for a voter",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "observers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 56,
      "name": "AlterPartition",
      "requests": [
        {
          "version": 0,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index leader_epoch [new_isr] partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The ID of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The epoch of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic to alter ISRs for",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition",
              "defaultValue": ""
            },
            {
              "field": "new_isr",
              "documentation": "The ISR for this partition",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The expected epoch of the partition which is being updated. For legacy cluster this is the ZkVersion in the LeaderAndIsr request.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index leader_epoch [new_isr] leader_recovery_state partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      leader_recovery_state => INT8\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The ID of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The epoch of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic to alter ISRs for",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition",
              "defaultValue": ""
            },
            {
              "field": "new_isr",
              "documentation": "The ISR for this partition",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The expected epoch of the partition which is being updated. For legacy cluster this is the ZkVersion in the LeaderAndIsr request.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition_index leader_epoch [new_isr] leader_recovery_state partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      leader_recovery_state => INT8\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The ID of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The epoch of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The ID of the topic to alter ISRs for",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch of this partition",
              "defaultValue": ""
            },
            {
              "field": "new_isr",
              "documentation": "The ISR for this partition",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The expected epoch of the partition which is being updated. For legacy cluster this is the ZkVersion in the LeaderAndIsr request.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index leader_epoch [new_isr] partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition level error code",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition for KRaft controllers. The current ZK version for the legacy controllers.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_name [partitions] TAG_BUFFER \n    topic_name => COMPACT_STRING\n    partitions => partition_index leader_epoch [new_isr] leader_recovery_state partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      leader_recovery_state => INT8\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_name",
              "documentation": "The name of the topic",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition level error code",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition for KRaft controllers. The current ZK version for the legacy controllers.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 2,
          "bnf": "broker_id broker_epoch [topics] TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n  topics => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => partition_index leader_epoch [new_isr] leader_recovery_state partition_epoch TAG_BUFFER \n      partition_index => INT32\n      leader_epoch => INT32\n      new_isr => INT32\n      leader_recovery_state => INT8\n      partition_epoch => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The ID of the topic",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition level error code",
              "defaultValue": ""
            },
            {
              "field": "leader_id",
              "documentation": "The broker ID of the leader.",
              "defaultValue": ""
            },
            {
              "field": "leader_epoch",
              "documentation": "The leader epoch.",
              "defaultValue": ""
            },
            {
              "field": "isr",
              "documentation": "The in-sync replica IDs.",
              "defaultValue": ""
            },
            {
              "field": "leader_recovery_state",
              "documentation": "1 if the partition is recovering from an unclean leader election; 0 otherwise.",
              "defaultValue": ""
            },
            {
              "field": "partition_epoch",
              "documentation": "The current epoch for the partition for KRaft controllers. The current ZK version for the legacy controllers.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 57,
      "name": "UpdateFeatures",
      "requests": [
        {
          "version": 0,
          "bnf": "timeout_ms [feature_updates] TAG_BUFFER \n  timeout_ms => INT32\n  feature_updates => feature max_version_level allow_downgrade TAG_BUFFER \n    feature => COMPACT_STRING\n    max_version_level => INT16\n    allow_downgrade => BOOLEAN\n",
          "fields": [
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "feature_updates",
              "documentation": "The list of updates to finalized features.",
              "defaultValue": ""
            },
            {
              "field": "feature",
              "documentation": "The name of the finalized feature to be updated.",
              "defaultValue": ""
            },
            {
              "field": "max_version_level",
              "documentation": "The new maximum version level for the finalized feature. A value >= 1 is valid. A value < 1, is special, and can be used to request the deletion of the finalized feature.",
              "defaultValue": ""
            },
            {
              "field": "allow_downgrade",
              "documentation": "DEPRECATED in version 1 (see DowngradeType). When set to true, the finalized feature version level is allowed to be downgraded/deleted. The downgrade request will fail if the new maximum version level is a value that's not lower than the existing maximum finalized version level.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "timeout_ms [feature_updates] validate_only TAG_BUFFER \n  timeout_ms => INT32\n  feature_updates => feature max_version_level upgrade_type TAG_BUFFER \n    feature => COMPACT_STRING\n    max_version_level => INT16\n    upgrade_type => INT8\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "timeout_ms",
              "documentation": "How long to wait in milliseconds before timing out the request.",
              "defaultValue": ""
            },
            {
              "field": "feature_updates",
              "documentation": "The list of updates to finalized features.",
              "defaultValue": ""
            },
            {
              "field": "feature",
              "documentation": "The name of the finalized feature to be updated.",
              "defaultValue": ""
            },
            {
              "field": "max_version_level",
              "documentation": "The new maximum version level for the finalized feature. A value >= 1 is valid. A value < 1, is special, and can be used to request the deletion of the finalized feature.",
              "defaultValue": ""
            },
            {
              "field": "upgrade_type",
              "documentation": "Determine which type of upgrade will be performed: 1 will perform an upgrade only (default), 2 is safe downgrades only (lossless), 3 is unsafe downgrades (lossy).",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "validate_only",
              "documentation": "True if we should validate the request, but not perform the upgrade or downgrade.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "timeout_ms [feature_updates] TAG_BUFFER \n  timeout_ms => INT32\n  feature_updates => feature max_version_level allow_downgrade TAG_BUFFER \n    feature => COMPACT_STRING\n    max_version_level => INT16\n    allow_downgrade => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or `0` if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or `null` if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "Results for each feature update.",
              "defaultValue": ""
            },
            {
              "field": "feature",
              "documentation": "The name of the finalized feature.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The feature update error code or `0` if the feature update succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The feature update error, or `null` if the feature update succeeded.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "version": 1,
          "bnf": "timeout_ms [feature_updates] validate_only TAG_BUFFER \n  timeout_ms => INT32\n  feature_updates => feature max_version_level upgrade_type TAG_BUFFER \n    feature => COMPACT_STRING\n    max_version_level => INT16\n    upgrade_type => INT8\n  validate_only => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or `0` if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or `null` if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "results",
              "documentation": "Results for each feature update.",
              "defaultValue": ""
            },
            {
              "field": "feature",
              "documentation": "The name of the finalized feature.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The feature update error code or `0` if the feature update succeeded.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The feature update error, or `null` if the feature update succeeded.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 58,
      "name": "Envelope",
      "requests": [
        {
          "version": 0,
          "bnf": "request_data request_principal client_host_address TAG_BUFFER \n  request_data => COMPACT_BYTES\n  request_principal => COMPACT_NULLABLE_BYTES\n  client_host_address => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "request_data",
              "documentation": "The embedded request header and data.",
              "defaultValue": ""
            },
            {
              "field": "request_principal",
              "documentation": "Value of the initial client principal when the request is redirected by a broker.",
              "defaultValue": ""
            },
            {
              "field": "client_host_address",
              "documentation": "The original client's address in bytes.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "request_data request_principal client_host_address TAG_BUFFER \n  request_data => COMPACT_BYTES\n  request_principal => COMPACT_NULLABLE_BYTES\n  client_host_address => COMPACT_BYTES\n",
          "fields": [
            {
              "field": "response_data",
              "documentation": "The embedded response header and data.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 60,
      "name": "DescribeCluster",
      "requests": [
        {
          "version": 0,
          "bnf": "include_cluster_authorized_operations TAG_BUFFER \n  include_cluster_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "include_cluster_authorized_operations",
              "documentation": "Whether to include cluster authorized operations.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "include_cluster_authorized_operations TAG_BUFFER \n  include_cluster_authorized_operations => BOOLEAN\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "cluster_id",
              "documentation": "The cluster ID that responding broker belongs to.",
              "defaultValue": ""
            },
            {
              "field": "controller_id",
              "documentation": "The ID of the controller broker.",
              "defaultValue": ""
            },
            {
              "field": "brokers",
              "documentation": "Each broker in the response.",
              "defaultValue": ""
            },
            {
              "field": "broker_id",
              "documentation": "The broker ID.",
              "defaultValue": ""
            },
            {
              "field": "host",
              "documentation": "The broker hostname.",
              "defaultValue": ""
            },
            {
              "field": "port",
              "documentation": "The broker port.",
              "defaultValue": ""
            },
            {
              "field": "rack",
              "documentation": "The rack of the broker, or null if it has not been assigned to a rack.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "cluster_authorized_operations",
              "documentation": "32-bit bitfield to represent authorized operations for this cluster.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 61,
      "name": "DescribeProducers",
      "requests": [
        {
          "version": 0,
          "bnf": "[topics] TAG_BUFFER \n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "topics",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name.",
              "defaultValue": ""
            },
            {
              "field": "partition_indexes",
              "documentation": "The indexes of the partitions to list producers for.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[topics] TAG_BUFFER \n  topics => name [partition_indexes] TAG_BUFFER \n    name => COMPACT_STRING\n    partition_indexes => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "Each topic in the response.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The topic name",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "Each partition in the response.",
              "defaultValue": ""
            },
            {
              "field": "partition_index",
              "documentation": "The partition index.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The partition error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The partition error message, which may be null if no additional details are available",
              "defaultValue": ""
            },
            {
              "field": "active_producers",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "last_sequence",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "last_timestamp",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "coordinator_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "current_txn_start_offset",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 64,
      "name": "UnregisterBroker",
      "requests": [
        {
          "version": 0,
          "bnf": "broker_id TAG_BUFFER \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The broker ID to unregister.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "broker_id TAG_BUFFER \n  broker_id => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "Duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The error code, or 0 if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or `null` if there was no top-level error.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 65,
      "name": "DescribeTransactions",
      "requests": [
        {
          "version": 0,
          "bnf": "[transactional_ids] TAG_BUFFER \n  transactional_ids => COMPACT_STRING\n",
          "fields": [
            {
              "field": "transactional_ids",
              "documentation": "Array of transactionalIds to include in describe results. If empty, then no results will be returned.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[transactional_ids] TAG_BUFFER \n  transactional_ids => COMPACT_STRING\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "transaction_states",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transactional_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transaction_state",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transaction_timeout_ms",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transaction_start_time_ms",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "producer_epoch",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "topics",
              "documentation": "The set of partitions included in the current transaction (if active). When a transaction is preparing to commit or abort, this will include only partitions which do not have markers.",
              "defaultValue": ""
            },
            {
              "field": "topic",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 66,
      "name": "ListTransactions",
      "requests": [
        {
          "version": 0,
          "bnf": "[state_filters] [producer_id_filters] TAG_BUFFER \n  state_filters => COMPACT_STRING\n  producer_id_filters => INT64\n",
          "fields": [
            {
              "field": "state_filters",
              "documentation": "The transaction states to filter by: if empty, all transactions are returned; if non-empty, then only transactions matching one of the filtered states will be returned",
              "defaultValue": ""
            },
            {
              "field": "producer_id_filters",
              "documentation": "The producerIds to filter by: if empty, all transactions will be returned; if non-empty, only transactions which match one of the filtered producerIds will be returned",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "[state_filters] [producer_id_filters] TAG_BUFFER \n  state_filters => COMPACT_STRING\n  producer_id_filters => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "unknown_state_filters",
              "documentation": "Set of state filters provided in the request which were unknown to the transaction coordinator",
              "defaultValue": ""
            },
            {
              "field": "transaction_states",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transactional_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "producer_id",
              "documentation": "",
              "defaultValue": ""
            },
            {
              "field": "transaction_state",
              "documentation": "The current transaction state of the producer",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 67,
      "name": "AllocateProducerIds",
      "requests": [
        {
          "version": 0,
          "bnf": "broker_id broker_epoch TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "broker_id",
              "documentation": "The ID of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "broker_epoch",
              "documentation": "The epoch of the requesting broker",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "broker_id broker_epoch TAG_BUFFER \n  broker_id => INT32\n  broker_epoch => INT64\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top level response error code",
              "defaultValue": ""
            },
            {
              "field": "producer_id_start",
              "documentation": "The first producer ID in this range, inclusive",
              "defaultValue": ""
            },
            {
              "field": "producer_id_len",
              "documentation": "The number of producer IDs in this range",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    },
    {
      "id": 68,
      "name": "ConsumerGroupHeartbeat",
      "requests": [
        {
          "version": 0,
          "bnf": "group_id member_id member_epoch instance_id rack_id rebalance_timeout_ms [subscribed_topic_names] subscribed_topic_regex server_assignor [client_assignors] [topic_partitions] TAG_BUFFER \n  group_id => COMPACT_STRING\n  member_id => COMPACT_STRING\n  member_epoch => INT32\n  instance_id => COMPACT_NULLABLE_STRING\n  rack_id => COMPACT_NULLABLE_STRING\n  rebalance_timeout_ms => INT32\n  subscribed_topic_names => COMPACT_STRING\n  subscribed_topic_regex => COMPACT_NULLABLE_STRING\n  server_assignor => COMPACT_NULLABLE_STRING\n  client_assignors => name minimum_version maximum_version reason metadata_version metadata_bytes TAG_BUFFER \n    name => COMPACT_STRING\n    minimum_version => INT16\n    maximum_version => INT16\n    reason => INT8\n    metadata_version => INT16\n    metadata_bytes => COMPACT_BYTES\n  topic_partitions => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n",
          "fields": [
            {
              "field": "group_id",
              "documentation": "The group identifier.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id generated by the coordinator. The member id must be kept during the entire lifetime of the member.",
              "defaultValue": ""
            },
            {
              "field": "member_epoch",
              "documentation": "The current member epoch; 0 to join the group; -1 to leave the group; -2 to indicate that the static member will rejoin.",
              "defaultValue": ""
            },
            {
              "field": "instance_id",
              "documentation": "null if not provided or if it didn't change since the last heartbeat; the instance Id otherwise.",
              "defaultValue": ""
            },
            {
              "field": "rack_id",
              "documentation": "null if not provided or if it didn't change since the last heartbeat; the rack ID of consumer otherwise.",
              "defaultValue": ""
            },
            {
              "field": "rebalance_timeout_ms",
              "documentation": "-1 if it didn't chance since the last heartbeat; the maximum time in milliseconds that the coordinator will wait on the member to revoke its partitions otherwise.",
              "defaultValue": ""
            },
            {
              "field": "subscribed_topic_names",
              "documentation": "null if it didn't change since the last heartbeat; the subscribed topic names otherwise.",
              "defaultValue": ""
            },
            {
              "field": "subscribed_topic_regex",
              "documentation": "null if it didn't change since the last heartbeat; the subscribed topic regex otherwise",
              "defaultValue": ""
            },
            {
              "field": "server_assignor",
              "documentation": "null if not used or if it didn't change since the last heartbeat; the server side assignor to use otherwise.",
              "defaultValue": ""
            },
            {
              "field": "client_assignors",
              "documentation": "null if not used or if it didn't change since the last heartbeat; the list of client-side assignors otherwise.",
              "defaultValue": ""
            },
            {
              "field": "name",
              "documentation": "The name of the assignor.",
              "defaultValue": ""
            },
            {
              "field": "minimum_version",
              "documentation": "The minimum supported version for the metadata.",
              "defaultValue": ""
            },
            {
              "field": "maximum_version",
              "documentation": "The maximum supported version for the metadata.",
              "defaultValue": ""
            },
            {
              "field": "reason",
              "documentation": "The reason of the metadata update.",
              "defaultValue": ""
            },
            {
              "field": "metadata_version",
              "documentation": "The version of the metadata.",
              "defaultValue": ""
            },
            {
              "field": "metadata_bytes",
              "documentation": "The metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "topic_partitions",
              "documentation": "null if it didn't change since the last heartbeat; the partitions owned by the member.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic ID.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ],
      "responses": [
        {
          "version": 0,
          "bnf": "group_id member_id member_epoch instance_id rack_id rebalance_timeout_ms [subscribed_topic_names] subscribed_topic_regex server_assignor [client_assignors] [topic_partitions] TAG_BUFFER \n  group_id => COMPACT_STRING\n  member_id => COMPACT_STRING\n  member_epoch => INT32\n  instance_id => COMPACT_NULLABLE_STRING\n  rack_id => COMPACT_NULLABLE_STRING\n  rebalance_timeout_ms => INT32\n  subscribed_topic_names => COMPACT_STRING\n  subscribed_topic_regex => COMPACT_NULLABLE_STRING\n  server_assignor => COMPACT_NULLABLE_STRING\n  client_assignors => name minimum_version maximum_version reason metadata_version metadata_bytes TAG_BUFFER \n    name => COMPACT_STRING\n    minimum_version => INT16\n    maximum_version => INT16\n    reason => INT8\n    metadata_version => INT16\n    metadata_bytes => COMPACT_BYTES\n  topic_partitions => topic_id [partitions] TAG_BUFFER \n    topic_id => UUID\n    partitions => INT32\n",
          "fields": [
            {
              "field": "throttle_time_ms",
              "documentation": "The duration in milliseconds for which the request was throttled due to a quota violation, or zero if the request did not violate any quota.",
              "defaultValue": ""
            },
            {
              "field": "error_code",
              "documentation": "The top-level error code, or 0 if there was no error",
              "defaultValue": ""
            },
            {
              "field": "error_message",
              "documentation": "The top-level error message, or null if there was no error.",
              "defaultValue": ""
            },
            {
              "field": "member_id",
              "documentation": "The member id generated by the coordinator. Only provided when the member joins with MemberEpoch == 0.",
              "defaultValue": ""
            },
            {
              "field": "member_epoch",
              "documentation": "The member epoch.",
              "defaultValue": ""
            },
            {
              "field": "should_compute_assignment",
              "documentation": "True if the member should compute the assignment for the group.",
              "defaultValue": ""
            },
            {
              "field": "heartbeat_interval_ms",
              "documentation": "The heartbeat interval in milliseconds.",
              "defaultValue": ""
            },
            {
              "field": "assignment",
              "documentation": "null if not provided; the assignment otherwise.",
              "defaultValue": ""
            },
            {
              "field": "error",
              "documentation": "The assigned error.",
              "defaultValue": ""
            },
            {
              "field": "assigned_topic_partitions",
              "documentation": "The partitions assigned to the member that can be used immediately.",
              "defaultValue": ""
            },
            {
              "field": "topic_id",
              "documentation": "The topic ID.",
              "defaultValue": ""
            },
            {
              "field": "partitions",
              "documentation": "The partitions.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "pending_topic_partitions",
              "documentation": "The partitions assigned to the member that cannot be used because they are not released by their former owners yet.",
              "defaultValue": ""
            },
            {
              "field": "metadata_version",
              "documentation": "The version of the metadata.",
              "defaultValue": ""
            },
            {
              "field": "metadata_bytes",
              "documentation": "The assigned metadata.",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            },
            {
              "field": "_tagged_fields",
              "documentation": "The tagged fields",
              "defaultValue": ""
            }
          ]
        }
      ]
    }
  ]
}
