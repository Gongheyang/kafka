running gradlew :jmh-benchmarks:clean :jmh-benchmarks:shadowJar

> Configure project :
Starting build with version 3.7.0-SNAPSHOT (commit id 8f3731e2) using Gradle 8.3, Java 11 and Scala 2.13.12
Build properties: maxParallelForks=12, maxScalacThreads=8, maxTestRetries=0

> Task :tools:tools-api:processResources NO-SOURCE
> Task :group-coordinator:processResources UP-TO-DATE
> Task :raft:processResources UP-TO-DATE
> Task :streams:processResources UP-TO-DATE
> Task :storage:storage-api:processResources NO-SOURCE
> Task :raft:processTestResources UP-TO-DATE
> Task :storage:storage-api:processTestResources NO-SOURCE
> Task :group-coordinator:processTestResources UP-TO-DATE
> Task :server-common:processResources NO-SOURCE
> Task :raft:createVersionFile UP-TO-DATE
> Task :core:processResources UP-TO-DATE
> Task :clients:processResources UP-TO-DATE
> Task :connect:api:processResources UP-TO-DATE
> Task :server-common:processTestResources UP-TO-DATE
> Task :streams:createStreamsVersionFile UP-TO-DATE
> Task :clients:createVersionFile UP-TO-DATE
> Task :core:processTestResources UP-TO-DATE
> Task :server-common:createVersionFile UP-TO-DATE
> Task :connect:transforms:processResources UP-TO-DATE
> Task :tools:tools-api:createVersionFile UP-TO-DATE
> Task :storage:processResources UP-TO-DATE
> Task :storage:storage-api:createVersionFile UP-TO-DATE
> Task :clients:processTestResources UP-TO-DATE
> Task :storage:createVersionFile UP-TO-DATE
> Task :metadata:processResources UP-TO-DATE
> Task :metadata:processTestResources UP-TO-DATE
> Task :generator:compileJava UP-TO-DATE
> Task :generator:processResources NO-SOURCE
> Task :generator:classes UP-TO-DATE
> Task :generator:jar UP-TO-DATE
> Task :metadata:processMessages UP-TO-DATE
> Task :streams:processMessages UP-TO-DATE
> Task :raft:processMessages UP-TO-DATE
> Task :group-coordinator:processMessages UP-TO-DATE
> Task :storage:processMessages UP-TO-DATE
> Task :core:processMessages UP-TO-DATE
> Task :clients:processMessages UP-TO-DATE
> Task :jmh-benchmarks:clean
> Task :jmh-benchmarks:processResources NO-SOURCE
> Task :clients:compileJava UP-TO-DATE
> Task :clients:classes UP-TO-DATE
> Task :clients:processTestMessages UP-TO-DATE
> Task :tools:tools-api:compileJava UP-TO-DATE
> Task :tools:tools-api:classes UP-TO-DATE
> Task :server-common:compileJava UP-TO-DATE
> Task :server-common:classes UP-TO-DATE
> Task :tools:tools-api:jar UP-TO-DATE
> Task :connect:api:compileJava UP-TO-DATE
> Task :streams:compileJava UP-TO-DATE
> Task :streams:classes UP-TO-DATE
> Task :connect:api:classes UP-TO-DATE
> Task :server-common:jar UP-TO-DATE
> Task :storage:storage-api:compileJava UP-TO-DATE
> Task :raft:compileJava UP-TO-DATE
> Task :raft:classes UP-TO-DATE
> Task :storage:storage-api:classes UP-TO-DATE
> Task :raft:jar UP-TO-DATE
> Task :storage:storage-api:jar UP-TO-DATE
> Task :storage:compileJava UP-TO-DATE
> Task :storage:classes UP-TO-DATE
> Task :connect:transforms:compileJava UP-TO-DATE
> Task :connect:transforms:classes UP-TO-DATE
> Task :metadata:compileJava UP-TO-DATE
> Task :storage:jar UP-TO-DATE
> Task :metadata:classes UP-TO-DATE
> Task :metadata:jar UP-TO-DATE
> Task :clients:compileTestJava UP-TO-DATE
> Task :group-coordinator:compileJava UP-TO-DATE
> Task :group-coordinator:classes UP-TO-DATE
> Task :core:compileJava NO-SOURCE
> Task :clients:jar UP-TO-DATE
> Task :group-coordinator:jar UP-TO-DATE
> Task :clients:testClasses UP-TO-DATE
> Task :streams:copyDependantLibs UP-TO-DATE
> Task :storage:storage-api:compileTestJava UP-TO-DATE
> Task :streams:jar UP-TO-DATE
> Task :storage:storage-api:testClasses UP-TO-DATE
> Task :raft:compileTestJava UP-TO-DATE
> Task :raft:testClasses UP-TO-DATE
> Task :connect:api:copyDependantLibs UP-TO-DATE
> Task :server-common:compileTestJava UP-TO-DATE
> Task :server-common:testClasses UP-TO-DATE
> Task :connect:api:jar UP-TO-DATE
> Task :metadata:compileTestJava UP-TO-DATE
> Task :metadata:testClasses UP-TO-DATE
> Task :group-coordinator:compileTestJava UP-TO-DATE
> Task :group-coordinator:testClasses UP-TO-DATE
> Task :connect:transforms:copyDependantLibs UP-TO-DATE
> Task :connect:transforms:jar UP-TO-DATE
> Task :core:compileScala UP-TO-DATE
> Task :core:classes UP-TO-DATE
> Task :core:compileTestJava NO-SOURCE
> Task :core:compileTestScala UP-TO-DATE
> Task :core:copyDependantLibs UP-TO-DATE
> Task :core:jar UP-TO-DATE
> Task :core:testClasses UP-TO-DATE
> Task :jmh-benchmarks:compileJava FROM-CACHE
> Task :jmh-benchmarks:classes UP-TO-DATE
> Task :jmh-benchmarks:shadowJar FROM-CACHE

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.3/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD SUCCESSFUL in 3s
70 actionable tasks: 1 executed, 2 from cache, 67 up-to-date
gradle build done
running JMH with args: -prof async:libPath=/home/boris/bin/async-profiler-2.10-linux-x64/lib/libasyncProfiler.so;output=flamegraph AuthorizerBenchmark
# JMH version: 1.37
# VM version: JDK 11.0.13, OpenJDK 64-Bit Server VM, 11.0.13+8-LTS
# VM invoker: /home/boris/.sdkman/candidates/java/11.0.13.8.1-amzn/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer
# Parameters: (aclCount = 500, authorizerType = ACL, denyPercentage = 50, resourceCount = 5000)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.012 ms/op
                 async: (text only)

# Processing profiler results: AsyncProfiler 


Result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer":
  0.013 ms/op

Secondary result "org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer:async":
Async profiler results:
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-forward.html
  /home/boris/IdeaProjects/kafka/org.apache.kafka.jmh.acl.AuthorizerBenchmark.testAuthorizer-AverageTime-aclCount-500-authorizerType-ACL-denyPercentage-50-resourceCount-5000/flame-cpu-reverse.html


# Run complete. Total time: 00:04:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                 (aclCount)  (authorizerType)  (denyPercentage)  (resourceCount)  Mode  Cnt  Score   Error  Units
AuthorizerBenchmark.testAuthorizer               500               ACL                50             5000  avgt    2  0.013          ms/op
AuthorizerBenchmark.testAuthorizer:async         500               ACL                50             5000  avgt         NaN            ---
JMH benchmarks done
